# -*- coding: utf-8 -*-
import numpy as np
from math import ceil

class Pontos:
    def __init__(self):
        self.checkEstatico = True
        tamCapa = 0
        self.limiar = (120,20)

        altZ = 2
        self.xs = 2
        self.ys = 8
        self.zs = 15
        # self.xs = 64
        # self.ys = 30

        # Cena 1 e 2
        self.xt = 117#self.limiar[0] - 5
        self.yt = 10#self.limiar[1] - 5
        self.zt = 10
        # Caixas
        # self.xt = 25
        # self.yt = 18

        # # Cena 3
        # self.xt = 85
        # self.yt = 38

        # Floreta
        # self.xt = 36
        # self.yt = 32

        # # Grande Simples 1
        # obsVx = {"0": [51]*(56-43), "1": [63]*(56-43), "2": [70]*(80-70), "3": [80]*(80-70), "4": [22]*(34-20), "5": [34]*(34-20), "6": [77]*(33-13), "7": [86]*(33-13), "8": [15]*(85-62), "9": [29]*(85-62)}
        # obsVy = {"0": list(np.arange(56-43+1)+43), "1": list(np.arange(56-43+1)+43), "2": list(np.arange(80-70+1)+70), "3": list(np.arange(80-70+1)+70), "4": list(np.arange(34-20+1)+20), "5": list(np.arange(34-20+1)+20), "6": list(np.arange(33-13+1)+13), "7": list(np.arange(33-13+1)+13), "8": list(np.arange(85-62+1)+62), "9": list(np.arange(85-62+1)+62)}

        # obsHx = {"0": list(np.arange(63-51+1)+51), "1": list(np.arange(63-51+1)+51), "2": list(np.arange(80-70+1)+70), "3": list(np.arange(80-70+1)+70), "4": list(np.arange(34-22+1)+22), "5": list(np.arange(34-22+1)+22), "6": list(np.arange(86-77+1)+77), "7": list(np.arange(86-77+1)+77), "8": list(np.arange(29-15+1)+15), "9": list(np.arange(29-15+1)+15)}
        # obsHy = {"0": [56]*(63-51+1), "1": [43]*(63-51+1), "2": [70]*(80-70+1), "3": [80]*(80-70+1), "4": [20]*(34-20+1), "5": [34]*(34-20+1), "6": [13]*(33-13+1), "7": [33]*(33-13+1), "8": [85]*(85-62+1), "9": [62]*(85-62+1)}

        # # Grande Nao estruturado 1
        # obsVx = {"0": [25]*(47-30), "1": [35]*(47-30), "2": [55]*(27-18), "3": [65]*(27-18), "4": [15]*(28-19), "5": [40]*(80-60), "6": [70]*(86-65), "7": [80]*(40-30), "8": [18]*(80-70)}
        # obsVy = {"0": list(np.arange(47-30+1)+30), "1": list(np.arange(47-30+1)+30), "2": list(np.arange(27-18+1)+18), "3": list(np.arange(27-18+1)+18), "4": list(np.arange(28-19+1)+7), "5": list(np.arange(80-60+1)+60), "6": list(np.arange(86-65+1)+65), "7": list(np.arange(40-30+1)+30), "8": list(np.arange(80-70+1)+70)}

        # obsHx = {"0": list(np.arange(35-25+1)+25), "1": list(np.arange(35-25+1)+25), "2": list(np.arange(65-55+1)+55), "3": list(np.arange(65-55+1)+55), "4": list(np.arange(63-50+1)+50), "5": list(np.arange(90-80+1)+80), "6": list(np.arange(48-35+1)+35)}
        # obsHy = {"0": [47]*(35-25+1), "1": [30]*(35-25+1), "2": [27]*(65-55+1), "3": [18]*(65-55+1), "4": [50]*(63-50), "5": [75]*(90-80), "6": [15]*(48-35)}

        # # Grande Nao estruturado 2
        # obsVx = {"0": [22]*(45-18), "1": [70]*(75-25), "2": [78]*(88-78), "3": [88]*(88-78), "4": [40]*(75-60), "5": [55]*(75-60), "6": [15]*(90-80), "7": [23]*(90-80)}
        # obsVy = {"0": list(np.arange(45-18+1)+18), "1": list(np.arange(75-25+1)+25), "2": list(np.arange(88-82+1)+82), "3": list(np.arange(88-82+1)+82), "4": list(np.arange(75-60+1)+60), "5": list(np.arange(75-60+1)+60), "6": list(np.arange(90-80+1)+80), "7": list(np.arange(90-80+1)+80)}

        # obsHx = {"0": list(np.arange(100-60+1)+60), "1": list(np.arange(88-78+1)+78), "2": list(np.arange(88-78+1)+78), "3": list(np.arange(55-40+1)+40), "4": list(np.arange(55-40+1)+40), "5": list(np.arange(23-15+1)+15), "6": list(np.arange(23-15+1)+15), "7": list(np.arange(18-0+1)+0), "8": list(np.arange(51-37+1)+37)}
        # obsHy = {"0": [25]*(100-60+1), "1": [88]*(88-78+1), "2": [82]*(88-78+1), "3": [75]*(75-60+1), "4": [60]*(75-60+1), "5": [90]*(90-80+1), "6": [80]*(90-80+1), "7": [64]*(18-0+1), "8": [38]*(51-37+1)}

        # # Pequeno simples
        # obsVx = {"0": [10]*(18-6), "1": [25]*(30-10), "2": [30]*(40-30)}
        # obsVy = {"0": list(np.arange(18-6+1)+6), "1": list(np.arange(30-10+1)+10), "2": list(np.arange(40-30+1)+30)}

        # obsHx = {"0": list(np.arange(40-25+1)+25)}
        # obsHy = {"0": [30]*(40-25)}

        # Default
        # obsVx = {"0": [23,23,23,23,23,23,23,23], "1": [27,27,27,27,27,27,27,27]}
        # obsVy = {"0": [23,24,25,26,27,28,29,30], "1": [23,24,25,26,27,28,29,30]}
        # obsHx = {"0": [23,24,25,26,27], "1": [23,24,25,26,27]}
        # obsHy = {"0": [23,23,23,23,23], "1": [30,30,30,30,30]}

        # # Pequeno nao estrutuado
        # obsVx = {"0": [10]*(18-8), "1": [25]*(30-20), "2": [40]*(50-40)}
        # obsVy = {"0": list(np.arange(18-8+1)+8), "1": list(np.arange(30-20+1)+20)}

        # obsHx = {"0": list(np.arange(40-30+1)+30), "1": list(np.arange(35-25+1)+25), "2": list(np.arange(50-40+1)+40)}
        # obsHy = {"0": [30]*(40-30), "1": [20]*(35-25)}
        

        ## -----------------------------------------------------------------------------
        obsVx = {}
        obsVy = {}

        obsHx = {}
        obsHy = {}

        obsVxz = {}
        obsVyz = {}

        obsHxz = {}
        obsHyz = {}
        # classic 1
        # obsVx = {"0": [10]*(18-8), "1": [25]*(50-20), "2": [40]*(50-40), "3": [35]*(30-0)}
        # obsVy = {"0": list(np.arange(18-8+1)+8), "1": list(np.arange(50-20+1)+20), "2": list(np.arange(50-40+1)+40), "3": list(np.arange(30-0+1)+0)}

        # obsHx = {"0": list(np.arange(40-30+1)+30), "1": list(np.arange(35-25+1)+25)}#, "2": list(np.arange(50-40)+40)
        # obsHy = {"0": [30]*(40-30), "1": [20]*(35-25)}#, "2": [40]*(50-40)

        # obsVxz = {"0": [10]*(18-8), "1": [25]*(45-20), "2": [35]*(30-0)}
        # obsVyz = {"0": list(np.arange(18-8+1)+8), "1": list(np.arange(45-20+1)+20), "2": list(np.arange(30-0+1)+0)}

        # obsHxz = {"0": list(np.arange(40-30+1)+30), "1": list(np.arange(35-25+1)+25)}
        # obsHyz = {"0": [30]*(40-30), "1": [20]*(35-25)}

        # classic 2
        # obsVx = {"0": [25]*(47-30), "1": [35]*(47-30), "2": [55]*(27-18), "3": [65]*(27-18), "4": [15]*(28-19), "5": [40]*(80-60), "6": [70]*(86-65), "7": [80]*(40-30), "8": [18]*(80-70)}
        # obsVy = {"0": list(np.arange(47-30+1)+30), "1": list(np.arange(47-30+1)+30), "2": list(np.arange(27-18+1)+18), "3": list(np.arange(27-18+1)+18), "4": list(np.arange(28-19+1)+7), "5": list(np.arange(80-60+1)+60), "6": list(np.arange(86-65+1)+65), "7": list(np.arange(40-30+1)+30), "8": list(np.arange(80-70+1)+70)}

        # obsHx = {"0": list(np.arange(35-25+1)+25), "1": list(np.arange(35-25+1)+25), "2": list(np.arange(65-55+1)+55), "3": list(np.arange(65-55+1)+55), "4": list(np.arange(63-50+1)+50), "5": list(np.arange(90-80+1)+80), "6": list(np.arange(48-35+1)+35)}
        # obsHy = {"0": [47]*(35-25+1), "1": [30]*(35-25+1), "2": [27]*(65-55+1), "3": [18]*(65-55+1), "4": [50]*(63-50), "5": [75]*(90-80), "6": [15]*(48-35)}

        # obsVxz = {"0": [25]*(47-30), "1": [35]*(47-30), "2": [55]*(27-18), "3": [65]*(27-18), "4": [15]*(28-19), "5": [80]*(40-30), "6": [18]*(80-70)}
        # obsVyz = {"0": list(np.arange(47-30+1)+30), "1": list(np.arange(47-30+1)+30), "2": list(np.arange(27-18+1)+18), "3": list(np.arange(27-18+1)+18), "4": list(np.arange(28-19+1)+7), "5": list(np.arange(40-30+1)+30), "6": list(np.arange(80-70+1)+70)}

        # obsHxz = {"0": list(np.arange(35-25+1)+25), "1": list(np.arange(35-25+1)+25), "2": list(np.arange(65-55+1)+55), "3": list(np.arange(65-55+1)+55), "4": list(np.arange(63-50+1)+50), "5": list(np.arange(48-35+1)+35)}
        # obsHyz = {"0": [47]*(35-25+1), "1": [30]*(35-25+1), "2": [27]*(65-55+1), "3": [18]*(65-55+1), "4": [50]*(63-50), "5": [15]*(48-35)}

        ## -----------------------------------------------------------------------------

        # # 10
        # obsVx = {"0": [2]*7, "1": [4]*7, "2": [6]*7, "3": [8]*7}
        # obsVy = {"0": {2,3,4,5,6,7,8}, "1": {2,3,4,5,6,7,8}, "2": {2,3,4,5,6,7,8}, "3": {2,3,4,5,6,7,8}}
        # obsHx = {}
        # obsHy = {}

        # 20
        # obsVx = {"0": [2]*12, "1": [3]*12, "2": [5]*12, "3": [6]*12, "4": [8]*12, "5": [9]*12, "6": [11]*12, "7": [12]*12, "8": [14]*12, "9": [15]*12, "10": [17]*12, "11": [18]*12}
        # obsVy = {"0": {2,3,5,6,8,9,11,12,14,15,17,18}, "1": {2,3,5,6,8,9,11,12,14,15,17,18}, "2": {2,3,5,6,8,9,11,12,14,15,17,18}, "3": {2,3,5,6,8,9,11,12,14,15,17,18}, "4": {2,3,5,6,8,9,11,12,14,15,17,18}, "5": {2,3,5,6,8,9,11,12,14,15,17,18}, "6": {2,3,5,6,8,9,11,12,14,15,17,18}, "7": {2,3,5,6,8,9,11,12,14,15,17,18}, "8": {2,3,5,6,8,9,11,12,14,15,17,18}, "9": {2,3,5,6,8,9,11,12,14,15,17,18}, "10": {2,3,5,6,8,9,11,12,14,15,17,18}, "11": {2,3,5,6,8,9,11,12,14,15,17,18}}
        # obsHx = {}
        # obsHy = {}

        # 30
        # obsVx = {"0": [15]*13, "1": [20]*7, "2": [6]*9, "3": [11]*4, "4": [16]*4, "5": [3]*5, "6": [7]*5}
        # obsVy = {"0": {1,2,3,4,5,6,7,8,9,10,11,12,13}, "1": {16,17,18,19,20,21,22}, "2": {10,11,12,13,14,15,16,17,18}, "3": {22,23,24,25}, "4": {22,23,24,25}, "5": {23,24,25,26,27}, "6": {23,24,25,26,27}}
        # obsHy = {"0": [15]*10, "1": [26]*7, "2": [22]*4, "3": [25]*4, "4": [23]*3, "5": [10]*5, "6": [18]*5}
        # obsHx = {"0": {20,21,22,23,24,25,26,27,28,29}, "1": {23,24,25,26,27,28,29}, "2": {12,13,14,15}, "3": {12,13,14,15}, "4": {4,5,6}, "5": {2,3,4,5,6}, "6": {2,3,4,5,6}}

        ## -----------------------------------------------------------------------------

        # # Default
        # obsVx = {"0": [10,10,10,10,10,10,10,10,10,10,10,10], "1": [20,20,20,20,20]}
        # obsVy = {"0": [1,2,3,4,5,6,7,8,9,10,11,12], "1": [5,6,7,8,9]}

        # obsHx = {"0": [1,2,3,4,5,6,7,8,9,10,11,12], "1": [1,2,3,4,5]}
        # obsHy = {"0": [50,50,50,50,50,50,50,50,50,50,50,50], "1": [60,60,60,60,60]}

        ## -----------------------------------------------------------------------------
        # Floresta 40 ICAPS
        # obsVx = {"0": [1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 13, 13, 13, 13, 13, 13, 13, 13, 17, 17, 17, 17, 17, 21, 21, 21, 21, 21, 21, 21, 21, 25, 25, 25, 25, 25, 25, 25, 25, 29, 29, 29, 29, 29, 29, 33, 33, 33, 33, 33, 33, 37, 37, 37, 37, 37, 37, 37]}
        # obsHx = {"0": [1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5, 9, 9, 9, 9, 9, 9, 9, 13, 13, 13, 13, 13, 13, 13, 13, 17, 17, 17, 17, 17, 21, 21, 21, 21, 21, 21, 21, 21, 25, 25, 25, 25, 25, 25, 25, 25, 29, 29, 29, 29, 29, 29, 33, 33, 33, 33, 33, 33, 37, 37, 37, 37, 37, 37, 37]}

        # obsVy = {"0": [5, 9, 13, 17, 21, 25, 29, 33, 5, 9, 13, 17, 21, 25, 29, 37, 5, 9, 13, 17, 29, 33, 37, 1, 5, 17, 21, 25, 29, 33, 37, 1, 13, 25, 29, 33, 5, 9, 13, 21, 25, 29, 33, 37, 5, 9, 13, 17, 21, 29, 33, 37, 5, 9, 21, 29, 33, 37, 9, 17, 21, 25, 29, 37, 1, 5, 9, 13, 17, 25, 37]}
        # obsHy = {"0": [5, 9, 13, 17, 21, 25, 29, 33, 5, 9, 13, 17, 21, 25, 29, 37, 5, 9, 13, 17, 29, 33, 37, 1, 5, 17, 21, 25, 29, 33, 37, 1, 13, 25, 29, 33, 5, 9, 13, 21, 25, 29, 33, 37, 5, 9, 13, 17, 21, 29, 33, 37, 5, 9, 21, 29, 33, 37, 9, 17, 21, 25, 29, 37, 1, 5, 9, 13, 17, 25, 37]}

        # # GYM 20x10
        # obsVx = {"0": [7,5,5,8,8,8,8,2,2,2,2,2,2,2,5,5,5,5,5,7,10,10,10,10,10,10,10,12,12,12,12,12,12,12,13,14,14,14,14,15,15,15,15,16,16,16,16]}
        # obsVy = {"0": [5,5,6,1,2,8,9,1,2,4,5,6,7,9,2,3,4,7,8,8,2,3,4,5,6,7,8,1,2,3,9,8,7,5,5,5,6,7,8,2,3,4,5,5,7,8,9]}

        # obsHx = {"0": [5,5,10,10,19,18,17,2,2,15,18,18,18,19,7,7,7,8,7]}
        # obsHy = {"0": [1,9,1,9,5,5,5,3,8,1,9,8,7,7,6,4,7,3,3]}

        # redX = [7,5,5,8,8,8,8,2,2,2,2,2,2,2,5,5,5,5,5,7,10,10,10,10,10,10,10,12,12,12,12,12,12,12,13,14,14,14,14,15,15,15,15,16,16,16,16]
        # redY = [5,5,6,1,2,8,9,1,2,4,5,6,7,9,2,3,4,7,8,8,2,3,4,5,6,7,8,1,2,3,9,8,7,5,5,5,6,7,8,2,3,4,5,5,7,8,9]
        # yellowX = [5,5,10,10,19,18,17]
        # yellowY = [1,9,1,9,5,5,5]
        # pinkX = [2,2,15,18,18,18,19,7,7,7,8,7]
        # pinkY = [3,8,1,9,8,7,7,6,4,7,3,3]

        self.visX = []
        self.visY = []
        for i in range(len(obsVx)):
            for ovx, ovy in zip(obsVx[str(i)], obsVy[str(i)]):
                self.visX.append(float(ovx))
                self.visY.append(float(ovy))

        for i in range(len(obsHx)):
            for ohx, ohy in zip(obsHx[str(i)], obsHy[str(i)]):
                self.visX.append(float(ohx))
                self.visY.append(float(ohy))

        self.visXz = []
        self.visYz = []
        for i in range(len(obsVxz)):
            for ovx, ovy in zip(obsVxz[str(i)], obsVyz[str(i)]):
                self.visXz.append(float(ovx))
                self.visYz.append(float(ovy))

        for i in range(len(obsHxz)):
            for ohx, ohy in zip(obsHxz[str(i)], obsHyz[str(i)]):
                self.visXz.append(float(ohx))
                self.visYz.append(float(ohy))

        self.capaX = []
        self.capaY = []

        for i in range(len(obsVx)):
            maxX, minX = max(obsVx[str(i)]), min(obsVx[str(i)])
            maxY, minY = max(obsVy[str(i)]), min(obsVy[str(i)])
            for ovx, ovy in zip(obsVx[str(i)], obsVy[str(i)]):
                self.capaX = np.append(self.capaX, float(ovx) + (tamCapa))
                self.capaX = np.append(self.capaX, float(ovx) - (tamCapa))
                self.capaY = np.append(self.capaY, float(ovy))
                self.capaY = np.append(self.capaY, float(ovy))
                # self.visXz = np.append(self.visXz, float(ovx) + (tamCapa))
                # self.visXz = np.append(self.visXz, float(ovx) - (tamCapa))
                # self.visYz = np.append(self.visYz, float(ovy))
                # self.visYz = np.append(self.visYz, float(ovy))
            for j in range(1, tamCapa+1):
                self.capaX = np.append(self.capaX, maxX+tamCapa)
                self.capaX = np.append(self.capaX, minX+tamCapa)
                self.capaX = np.append(self.capaX, minX-tamCapa)
                self.capaX = np.append(self.capaX, maxX-tamCapa)
                self.capaY = np.append(self.capaY, maxY+j-1)
                self.capaY = np.append(self.capaY, minY-j)
                self.capaY = np.append(self.capaY, maxY+j-1)
                self.capaY = np.append(self.capaY, minY-j)
                # self.visXz = np.append(self.visXz, maxX+tamCapa)
                # self.visXz = np.append(self.visXz, minX+tamCapa)
                # self.visXz = np.append(self.visXz, minX-tamCapa)
                # self.visXz = np.append(self.visXz, maxX-tamCapa)
                # self.visYz = np.append(self.visYz, maxY+j-1)
                # self.visYz = np.append(self.visYz, minY-j)
                # self.visYz = np.append(self.visYz, maxY+j-1)
                # self.visYz = np.append(self.visYz, minY-j)
            values = np.arange(((tamCapa*2) - 1)) - ceil(tamCapa/2)
            if len(values) == 1: values = [0]
            for element in values:
                self.capaX = np.append(self.capaX, maxX+element)
                self.capaX = np.append(self.capaX, maxX-element)
                self.capaY = np.append(self.capaY, maxY+tamCapa-1)
                self.capaY = np.append(self.capaY, minY-tamCapa)
                # self.visXz = np.append(self.visXz, maxX+element)
                # self.visXz = np.append(self.visXz, maxX-element)
                # self.visYz = np.append(self.visYz, maxY+tamCapa-1)
                # self.visYz = np.append(self.visYz, minY-tamCapa)

        for i in range(len(obsHx)):
            maxX, minX = max(obsHx[str(i)]), min(obsHx[str(i)])
            maxY, minY = max(obsHy[str(i)]), min(obsHy[str(i)])
            for ohx, ohy in zip(obsHx[str(i)], obsHy[str(i)]):
                self.capaX = np.append(self.capaX, float(ohx))
                self.capaX = np.append(self.capaX, float(ohx))
                self.capaY = np.append(self.capaY, float(ohy) + (tamCapa))
                self.capaY = np.append(self.capaY, float(ohy) - (tamCapa))
                # self.visXz = np.append(self.visXz, float(ohx))
                # self.visXz = np.append(self.visXz, float(ohx))
                # self.visYz = np.append(self.visYz, float(ohy) + (tamCapa))
                # self.visYz = np.append(self.visYz, float(ohy) - (tamCapa))
            for j in range(1, tamCapa+1):
                self.capaX = np.append(self.capaX, maxX+j-1)
                self.capaX = np.append(self.capaX, minX-j)
                self.capaX = np.append(self.capaX, maxX+j-1)
                self.capaX = np.append(self.capaX, minX-j)
                self.capaY = np.append(self.capaY, maxY+tamCapa)
                self.capaY = np.append(self.capaY, minY+tamCapa)
                self.capaY = np.append(self.capaY, minY-tamCapa)
                self.capaY = np.append(self.capaY, maxY-tamCapa)
                # self.visXz = np.append(self.visXz, maxX+j-1)
                # self.visXz = np.append(self.visXz, minX-j)
                # self.visXz = np.append(self.visXz, maxX+j-1)
                # self.visXz = np.append(self.visXz, minX-j)
                # self.visYz = np.append(self.visYz, maxY+tamCapa)
                # self.visYz = np.append(self.visYz, minY+tamCapa)
                # self.visYz = np.append(self.visYz, minY-tamCapa)
                # self.visYz = np.append(self.visYz, maxY-tamCapa)
            values = np.arange(((tamCapa*2) - 1)) - ceil(tamCapa/2)
            if len(values) == 1: values = [0]
            for element in values:
                self.capaX = np.append(self.capaX, maxX+tamCapa-1)
                self.capaX = np.append(self.capaX, minX-tamCapa)
                self.capaY = np.append(self.capaY, maxY+element)
                self.capaY = np.append(self.capaY, maxY-element)
                # self.visXz = np.append(self.visXz, maxX+tamCapa-1)
                # self.visXz = np.append(self.visXz, minX-tamCapa)
                # self.visYz = np.append(self.visYz, maxY+element)
                # self.visYz = np.append(self.visYz, maxY-element)

        obsx = np.concatenate((self.visX, self.capaX), axis=0)
        obsy = np.concatenate((self.visY, self.capaY), axis=0)
        self.capaZ = [altZ] * len(self.capaX)

        # Cena Teste
        # start node
        # self.xs = 5
        # self.ys = 5
        # goal node
        # self.xt = 92
        # self.yt = 92
        # obstaculos estaticos
        # obsx = [90,90,90,90,80,80,80,80,50,50,50,50,70,70,70,70,35,35,35,35,40,40,40,40,35,45,45,45,45,91,92,93,94,81,82,83,84,36,37,38,39,41,42,43,44,45,71,72,73,74,76,77,78,79,86,87,88,89,51,52,53,54,31,32,33,34,36,37,38,39,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,35,35,35,35,35,35,35,35,31,32,33,34,36,37,38,39,20,20,20,20,86,87,88,89,61,62,63,64,90,90,90,90,90,90,90,90,90,90,90,90,85,85,85,85,85,85,85,85,75,75,75,75,75,75,75,75,65,65,65,65,85,85,85,85,60,60,60,60,41,42,43,44,45,45,45,45,45,15.0, 15,15,15,15,15.0, 15.0,15,15,15,15,16,17,18,19, 15.0,20,20,20,20, 20.0, 20.0, 20.0,26,27,28,29, 20.0, 25.0, 25.0,25,25,25, 25.0, 30.0, 30.0, 30.0,30,30,30,30, 30.0, 35.0, 35.0, 35.0, 35.0, 40.0, 40.0, 40.0, 40.0, 45.0, 45.0, 50.0, 50.0, 50.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 60.0, 60.0, 65.0, 65.0, 75.0, 70.0, 70.0, 70.0, 75.0, 75.0, 75.0, 80.0, 80.0, 85.0, 85.0, 85.0, 85.0, 85.0, 85.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 95.0]
        # obsy = [21,22,23,24,41,42,43,44,16,17,18,19,16,17,18,19,21,22,23,24,21,22,23,24,40,26,27,28,29,25,25,25,25,40,40,40,40,25,25,25,25,25,25,25,25,25,45,45,45,45,45,45,45,45,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,41,42,43,44,46,47,48,49,51,52,53,54,56,57,58,59,61,62,63,64,41,42,43,44,46,47,48,49,40,40,40,40,40,40,40,40,31,32,33,34,70,70,70,70,80,80,80,80,56,57,58,59,61,62,63,64,66,67,68,69,79,78,77,76,74,73,72,71,61,62,63,64,69,68,67,66,79,78,77,76,84,83,82,81,84,83,82,81,80,80,80,80,80,79,78,77,76,15.0, 16,17,18,19,20.0, 80.0,81,82,83,84,85,85,85,85, 85.0,86,87,88,89, 30.0, 35.0, 85.0,65,65,65,65, 90.0, 60.0, 61.0,62,63,64, 65.0, 20.0, 40.0, 65.0,66,67,68,69, 70.0, 45.0, 50.0, 25.0, 20.0, 20.0, 25.0, 40.0, 80.0, 30.0, 75.0, 15.0, 20.0, 90.0, 20.0, 40.0, 45.0, 50.0, 55.0, 60.0, 65.0, 85.0, 80.0, 80.0, 75.0, 65.0, 45.0, 20.0, 15.0, 65.0, 60.0, 45.0, 45.0, 40.0, 40.0, 20.0, 85.0, 80.0, 75.0, 70.0, 70.0, 65.0, 60.0, 55.0, 25.0, 20.0, 25.0]
        # obsx = [2,3]
        # obsy = [2,3]

        # # Cena 1
        # obsx = [1, 2, 3, 4, 4, 4, 6, 6, 6, 6, 6, 7, 8, 9]
        # obsy = [5, 5, 5, 5, 4, 3, 3, 4, 5, 6, 7, 6, 6, 6]
        # self.limiar = 10

        # # Cena 2
        # obsx = [24,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 12, 13, 14, 15, 16, 17, 18, 19, 17, 18, 19, 17, 18, 19, 17, 18, 19, 17, 18, 19, 20, 21, 22, 20, 21, 22, 23, 24, 17, 18, 19, 20, 21, 22, 23, 24, 17, 18, 19, 20, 21, 22, 23, 24]
        # obsy = [9,4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 22, 22, 22, 23, 23, 23, 24, 24, 24, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15]
        # self.limiar = 25

        # # Cena 3
        # obsx = [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 8, 9, 10, 8, 9, 10, 8, 9, 10, 8, 9, 10, 8, 9, 10, 8, 9, 10, 8, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 39, 40, 41, 42, 43, 44, 39, 40, 41, 42, 43, 44, 39, 40, 41, 42, 43, 44, 39, 40, 41, 42, 43, 44, 39, 40, 41, 42, 43, 44, 39, 40, 41, 42, 43, 44, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 30, 31, 14, 15, 16, 17, 18, 19, 14, 15, 16, 17, 18, 19, 14, 15, 16, 17, 18, 19, 14, 15, 16, 17, 18, 19, 14, 15, 16, 17, 18, 19, 14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 35, 36, 37, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49]
        # obsy = [45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 39, 39, 39, 40, 40, 40, 41, 41, 41, 42, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 45, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 38, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 21, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 21, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
        # self.limiar = 50

        # # Cena 4
        # obsx = [5]
        # obsy = [5]
        # self.limiar = 10

        # obsx = [4,5,6,7,8,9,20,20,20,20,20,20,30,30,30,30,30]
        # obsy = [6,6,6,6,6,6,12,13,14,15,16,17,28,29,30,31,32]
        # ox, oy = [], []
        # self.limiar = 50



        ox, oy = [], []
        passo = 1
        for i in range(0, self.limiar[1], passo):
            self.visX.append(0)
            self.visY.append(i)
            ox.append(0)
            oy.append(i)
        for i in range(0, self.limiar[1], passo):
            self.visX.append(self.limiar[0])
            self.visY.append(i)
            ox.append(self.limiar[0])
            oy.append(i)
        for i in range(0, self.limiar[0], passo):
            self.visX.append(i)
            self.visY.append(0)
            ox.append(i)
            oy.append(0)
        for i in range(0, self.limiar[0], passo):
            self.visX.append(i)
            self.visY.append(self.limiar[1])
            ox.append(i)
            oy.append(self.limiar[1])

        for (ax, ay) in zip (obsx, obsy):
            ox.append(ax)
            oy.append(ay)

        self.xobs = ox
        self.yobs = oy
        self.zobs = [0] * len(self.xobs)
        self.zobs1 = [1] * len(self.xobs)
        self.zobs2 = [2] * len(self.xobs)
        self.zobs3 = [3] * len(self.xobs)
        self.zobs4 = [4] * len(self.xobs)
        self.zobs5 = [5] * len(self.xobs)

        # # You should not pass
        # # Base3D
        # vermelhoX = []
        # vermelhoY = []
        # zobs00 = [0] * len(vermelhoX)
        # zobs11 = [1] * len(vermelhoX)
        # zobs22 = [2] * len(vermelhoX)
        # zobs33 = [3] * len(vermelhoX)
        # zobs44 = [4] * len(vermelhoX)
        # zobs55 = [5] * len(vermelhoX)

        # # so por cima
        # # Base3D
        # rosaX = [6,6,6,6,6,6,6,6,6]
        # rosaY = [1,2,3,4,5,6,7,8,9]
        # zobs0 = [0] * len(rosaX)
        # zobs1 = [1] * len(rosaX)
        # zobs2 = [2] * len(rosaX)

        # # so por baixo
        # # Base3D
        # amareloX = [14,14,14,14,14,14,14,14,14]
        # amareloY = [1,2,3,4,5,6,7,8,9]
        # zobs222 = [2] * len(amareloX)
        # zobs3 = [3] * len(amareloX)
        # zobs4 = [4] * len(amareloX)
        # zobs5 = [5] * len(amareloX)

        # # # You should not pass
        # # # Mestrado V2
        # vermelhoX = [5,5,5,5,5,5,5, 16,16,16,16,16, 4,4,4,4,4,4,4, 15,15,15,15,15, 6,6,6,6,6,6,6, 17,17,17,17,17, 3,3,3,3,3,3,3, 14,14,14,14,14, 7,7,7,7,7,7,7, 18,18,18,18,18]
        # vermelhoY = [1,2,3,4,5,6,7, 9,8,7,6,5, 1,2,3,4,5,6,7, 9,8,7,6,5, 1,2,3,4,5,6,7, 9,8,7,6,5, 1,2,3,4,5,6,7, 9,8,7,6,5, 1,2,3,4,5,6,7, 9,8,7,6,5]
        # zobs00 = [0] * len(vermelhoX)
        # zobs11 = [1] * len(vermelhoX)
        # zobs22 = [2] * len(vermelhoX)
        # zobs33 = [3] * len(vermelhoX)
        # zobs44 = [4] * len(vermelhoX)
        # zobs55 = [5] * len(vermelhoX)

        # # # # so por cima
        # # # # MestradoV2
        # rosaX = [11,12,13,14,15,16,16,16,16,16, 11,12,13,14,15,15,15,15,15,15, 11,12,13,14,15,17,17,17,17,17, 11,12,13,14,15,14,14,14,14,14, 11,12,13,14,15,18,18,18,18,18]
        # rosaY = [5,5,5,5,5,5,4,3,2,1, 4,4,4,4,4,4,4,3,2,1, 6,6,6,6,6,6,4,3,2,1, 3,3,3,3,3,3,4,3,2,1, 7,7,7,7,7,7,4,3,2,1]
        # zobs0 = [0] * len(rosaX)
        # zobs1 = [1] * len(rosaX)
        # zobs2 = [2] * len(rosaX)
        # zobs3 = [3] * len(rosaX)
        
        # # # # so por baixo
        # # # # MestradoV2
        # amareloX = [10,10,10,10,10,10,10,10,10, 11,11,11,11,11,11,11,11,11, 9,9,9,9,9,9,9,9,9, 12,12,12,12,12,12,12,12,12, 8,8,8,8,8,8,8,8,8]
        # amareloY = [1,2,3,4,5,6,7,8,9, 1,2,3,4,5,6,7,8,9, 1,2,3,4,5,6,7,8,9, 1,2,3,4,5,6,7,8,9, 1,2,3,4,5,6,7,8,9]
        # zobs222 = [2] * len(amareloX)
        # zobs333 = [3] * len(amareloX)
        # zobs444 = [4] * len(amareloX)
        # zobs555 = [5] * len(amareloX)

        # # You should not pass
        # # ICRA Internal Indoor
        vermelhoX = [4,4,4,4,5,6,7,8,9,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16] 
        vermelhoY = [14,15,16,17,17,17,17,17,17,17,17,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,1,2,3,4,5,6,7,8,9,10,11,4,5,6,7,8,9,10,11,12,13] 
        zobs00 = [0] * len(vermelhoX)
        zobs11 = [1] * len(vermelhoX)
        zobs22 = [2] * len(vermelhoX)
        zobs33 = [3] * len(vermelhoX)
        zobs44 = [4] * len(vermelhoX)
        zobs55 = [5] * len(vermelhoX)

        # # # so por cima
        # # ICRA Internal Indoor
        rosaX = [1,2,3,4,5,4,4,4,4,4,4,17,18,19,20,21,17,18,19,20,21] 
        rosaY = [7,7,7,7,7,18,19,20,21,22,23,17,17,17,17,17,7,7,7,7,7] 
        zobs0 = [0] * len(rosaX)
        zobs1 = [1] * len(rosaX)
        zobs2 = [2] * len(rosaX)
        zobs3 = [3] * len(rosaX)
        
        # # # so por baixo
        # # ICRA Internal Indoor
        amareloX = [16,16,16,12,13,14,15,16,17,18,19,20,21,16,16,16,16,16,16,16] 
        amareloY = [1,2,3,13,13,13,13,13,13,13,13,13,13,17,18,19,20,21,22,23] 
        zobs222 = [2] * len(amareloX)
        zobs333 = [3] * len(amareloX)
        zobs444 = [4] * len(amareloX)
        zobs555 = [5] * len(amareloX)

        # # You should not pass
        # # bracis v2
        # vermelhoX = [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15]
        # vermelhoY = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5]
        # vermelhoX = [7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13]
        # vermelhoY = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4]
        # zobs00 = [0] * len(vermelhoX)
        # zobs11 = [1] * len(vermelhoX)
        # zobs22 = [2] * len(vermelhoX)
        # zobs33 = [3] * len(vermelhoX)
        # zobs44 = [4] * len(vermelhoX)
        # zobs55 = [5] * len(vermelhoX)

        # # so por cima
        # # bracis v2
        # rosaX = [6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14, 6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14, 6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14]
        # rosaY = [15,15,15,15,15,15,15,15,15,5,5,5,5,5,5,5,5,5, 14,14,14,14,14,14,14,14,14,4,4,4,4,4,4,4,4,4, 16,16,16,16,16,16,16,16,16,6,6,6,6,6,6,6,6,6]
        # zobs0 = [0] * len(rosaX)
        # zobs1 = [1] * len(rosaX)
        # zobs2 = [2] * len(rosaX)
        # zobs3 = [3] * len(rosaX)
        
        # # so por baixo
        # # bracis v2
        # amareloX = [6,7,8,9,10,11,12,13,14, 6,7,8,9,10,11,12,13,14, 6,7,8,9,10,11,12,13,14]
        # amareloY = [10,10,10,10,10,10,10,10,10, 11,11,11,11,11,11,11,11,11, 9,9,9,9,9,9,9,9,9]
        # zobs222 = [2] * len(amareloX)
        # zobs333 = [3] * len(amareloX)
        # zobs444 = [4] * len(amareloX)
        # zobs555 = [5] * len(amareloX)
        

        # Outros
        # self.xobs = np.concatenate((vermelhoX,vermelhoX,vermelhoX,vermelhoX,vermelhoX,vermelhoX, self.xobs,self.xobs,self.xobs,self.xobs,self.xobs,self.xobs,rosaX,rosaX,rosaX,rosaX,amareloX,amareloX,amareloX,amareloX), axis=0)
        # self.yobs = np.concatenate((vermelhoY,vermelhoY,vermelhoY,vermelhoY,vermelhoY,vermelhoY, self.yobs,self.yobs,self.yobs,self.yobs,self.yobs,self.yobs,rosaY,rosaY,rosaY,rosaY,amareloY,amareloY,amareloY,amareloY), axis=0)
        # self.zobs = np.concatenate((zobs00,zobs11,zobs22,zobs33,zobs44,zobs55, self.zobs,self.zobs1,self.zobs2,self.zobs3,self.zobs4,self.zobs5,zobs0,zobs1,zobs2,zobs3,zobs222,zobs333,zobs444,zobs555), axis=0)
        
        # warframe 120 x 20 x 25
        self.xobs = [11.281522887626823,11.022703842524301,11.022703842524301,11.281522887626823,11.540341932729344,11.799160977831864,11.540341932729344,11.799160977831864,11.799160977831864,12.057980022934384,11.281522887626823,11.022703842524301,11.281522887626823,11.540341932729344,11.540341932729344,10.574416106440275,11.799160977831864,11.281522887626823,11.022703842524301,11.540341932729344,11.799160977831864,13.144024186083945,14.109950012373012,15.07587583866208,17.973653317529283,13.144024186083945,14.109950012373012,15.07587583866208,17.973653317529283,18.939579143818356,19.905504970107422,18.939579143818356,19.905504970107422,11.281522887626823,12.24744871391589,12.24744871391589,11.98862966881337,12.24744871391589,13.213374540204958,12.50626775901841,12.765086804120932,12.50626775901841,13.47219358530748,12.765086804120932,13.73101263041,12.50626775901841,13.47219358530748,12.765086804120932,13.73101263041,14.43811941159655,14.696938456699069,13.023905849223453,13.023905849223453,13.98983167551252,11.022703842524301,11.98862966881337,11.281522887626823,12.24744871391589,14.886407147680575,13.402843231186466,14.368769057475532,14.627588102578054,13.402843231186466,14.368769057475532,13.661662276288986,14.627588102578054,11.98862966881337,12.954555495102436,12.24744871391589,13.213374540204958,11.98862966881337,12.954555495102436,11.729810623710849,12.695736449999917,12.24744871391589,13.213374540204958,14.886407147680575,13.920481321391506,14.179300366494028,15.852332973969641,15.593513928867122,15.334694883764602,15.593513928867122,16.55943975515619,18.232472362631807,18.491291407734327,18.232472362631807,17.266546536342737,18.491291407734327,15.852332973969641,16.111152019072165,15.852332973969641,16.81825880025871,13.47219358530748,13.213374540204958,12.50626775901841,12.765086804120932,13.73101263041,12.765086804120932,13.73101263041,13.023905849223453,13.98983167551252,13.282724894325973,14.248650720615041,13.023905849223453,13.98983167551252,13.282724894325973,14.248650720615041,14.955757501801589,14.955757501801589,12.50626775901841,13.47219358530748,12.50626775901841,13.47219358530748,12.765086804120932,13.98983167551252,14.248650720615041,14.955757501801589,14.955757501801589,16.369971064174685,17.335896890463754,16.628790109277205,15.662864282988137,17.594715935566274,16.369971064174685,17.335896890463754,16.628790109277205,17.594715935566274,16.887609154379724,15.921683328090658,17.853534980668794,16.887609154379724,17.853534980668794,19.78538663324693,20.04420567834945,17.335896890463754,16.628790109277205,16.369971064174685,17.594715935566274,19.78538663324693,18.819460806957863,19.078279852060383,20.04420567834945,19.78538663324693,18.819460806957863,19.078279852060383,20.04420567834945,13.402843231186466,14.368769057475532,11.98862966881337,12.695736449999917,12.954555495102436,12.24744871391589,13.213374540204958,15.334694883764602,18.232472362631807,12.50626775901841,13.47219358530748,12.765086804120932,14.696938456699069,15.662864282988137,14.248650720615041,13.98983167551252,14.248650720615041,15.21457654690411,14.955757501801589,15.921683328090658,15.21457654690411,16.18050237319318,15.662864282988137,14.955757501801589,14.696938456699069,15.921683328090658,15.21457654690411,16.18050237319318,19.78538663324693,18.819460806957863,19.078279852060383,20.04420567834945,19.78538663324693,18.819460806957863,19.078279852060383,20.04420567834945,16.628790109277205,16.887609154379724,19.198398188920876,19.457217234023396,19.198398188920876,19.457217234023396,20.751312459536,19.198398188920876,14.507469765717563,15.473395592006632,16.439321418295698,29.255176205156108,30.221102031445177,29.962282986342657,30.221102031445177,29.255176205156108,31.187027857734243,32.152953684023316,30.928208812631723,31.187027857734243,32.152953684023316,29.513995250258628,30.479921076547697,29.513995250258628,30.479921076547697,31.445846902836763,32.411772729125836,31.704665947939283,32.670591774228356,31.445846902836763,32.411772729125836,31.704665947939283,32.670591774228356,33.3776985554149,33.63651760051742,34.60244342680649,33.11887951031238,33.11887951031238,33.3776985554149,34.34362438170397,33.63651760051742,34.60244342680649,33.3776985554149,34.34362438170397,33.63651760051742,34.60244342680649,32.929410819330876,33.89533664561994,34.86126247190901,33.89533664561994,34.86126247190901,38.46614673196276,39.94971064845687,39.69089160335435,37.75903995077621,37.50022090567369,38.72496577706528,38.01785899587874,38.983784822167806,37.75903995077621,37.50022090567369,38.72496577706528,38.46614673196276,38.01785899587874,38.983784822167806,39.69089160335435,40.65681742964342,39.94971064845687,40.91563647474594,39.69089160335435,40.65681742964342,39.94971064845687,40.91563647474594,39.242603867270326,40.2085296935594,41.174455519848465,41.622743255932484,41.881562301035004,41.622743255932484,41.881562301035004,42.14038134613753,45.038158825004736,44.07223299871567,45.296977870107256,44.33105204381819,45.038158825004736,44.07223299871567,44.33105204381819,45.296977870107256,45.74526560619128,46.71119143248035,46.00408465129381,46.26290369639633,46.00408465129381,46.970010477582875,46.26290369639633,47.228829522685395,50.1266070015526,51.092532827841666,50.1266070015526,51.092532827841666,44.58987108892071,45.555796915209775,45.555796915209775,46.52172274149885,51.351351872944186,52.31727769923326,49.419500220366054,49.160681175263534,50.38542604665512,51.351351872944186,50.64424509175764,51.610170918046705,49.419500220366054,50.38542604665512,51.351351872944186,50.64424509175764,49.67831926546857,51.610170918046705,52.31727769923326,53.283203525522325,52.57609674433578,53.542022570624844,52.31727769923326,53.283203525522325,52.57609674433578,53.542022570624844,51.868989963149225,52.8349157894383,53.800841615727364,54.24912935181139,54.50794839691391,57.405725875781116,57.664544920883635,57.923363965986155,57.664544920883635,56.69861909459457,57.923363965986155,59.337577528359255,60.0446843095458,61.010610135834874,60.30350335464832,61.269429180937394,60.0446843095458,61.010610135834874,60.30350335464832,59.078758483256735,61.269429180937394,59.596396573461774,58.63047074717271,60.56232239975084,61.52824822603991,58.37165170207019,59.337577528359255,58.37165170207019,59.337577528359255,60.0446843095458,61.010610135834874,59.078758483256735,60.30350335464832,61.269429180937394,60.30350335464832,61.269429180937394,58.63047074717271,59.596396573461774,58.88928979227523,59.855215618564294,58.63047074717271,59.596396573461774,58.88928979227523,59.855215618564294,60.56232239975084,61.52824822603991,60.56232239975084,61.52824822603991,60.82114144485336,58.182183011088675,59.14810883737775,62.23535500722646,66.42722771160626,66.68604675670879,64.2365570139256,64.94366379511216,65.20248284021469,66.16840866650375,64.94366379511216,66.16840866650375,65.4613018853172,66.42722771160626,65.72012093041972,66.68604675670879,65.4613018853172,67.39315353789533,67.65197258299786,70.03211197166002,67.39315353789533,69.32500519047348,70.29093101676254,69.58382423557599,70.54975006186505,69.32500519047348,70.29093101676254,70.54975006186505,74.34410301290032,75.3100288391894,76.27595466547847,73.44752754073227,70.9980377979491,71.25685684305161,72.22278266934067,71.51567588815414,72.4816017144432,71.25685684305161,72.22278266934067,71.51567588815414,72.4816017144432,73.18870849562974,73.44752754073227,74.41345336702133,73.18870849562974,74.1546343219188,73.44752754073227,74.41345336702133,76.53477371058098,77.50069953687004,65.97893997552224,73.70634658583478,74.67227241212385,72.74042075954571,71.77449493325665,72.74042075954571,73.70634658583478,74.67227241212385,73.70634658583478,74.67227241212385,73.9651656309373,77.82886893609358,78.79479476238265,78.79479476238265,79.05361380748518,79.24308249846668,80.20900832475574,79.24308249846668,80.20900832475574,81.17493415104481,82.84796675852043,83.10678580362296,84.07271162991202,83.10678580362296,84.07271162991202,79.17373214434566,78.2078063180566,78.2078063180566,79.17373214434566,80.13965797063473,78.46662536315911,79.43255118944818,79.43255118944818,78.46662536315911,78.46662536315911,79.43255118944818,80.39847701573724,81.36440284202632,80.65729606083977,81.62322188712885,80.13965797063473,80.39847701573724,81.36440284202632,80.65729606083977,81.62322188712885,81.88204093223136,81.88204093223136,82.58914771341792,83.55507353970698,82.58914771341792,83.55507353970698,84.52099936599605,82.84796675852043,83.8138925848095,82.84796675852043,83.8138925848095,84.77981841109856,84.52099936599605,84.07271162991202,85.03863745620109,84.77981841109856,84.07271162991202,85.03863745620109,79.50190154356919,80.46782736985826,81.43375319614732,83.36560484872547,84.33153067501453,84.59034972011706,85.2974565013036,86.26338232759267,85.55627554640613,86.52220137269519,79.50190154356919,80.46782736985826,80.20900832475574,79.76072058867172,79.76072058867172,81.17493415104481,81.43375319614732,80.01953963377424,80.27835867887676,79.31243285258769,81.24428450516582,80.01953963377424,80.27835867887676,81.24428450516582,82.65849806753893,82.91731711264146,79.76072058867172,80.72664641496078,79.76072058867172,80.72664641496078,82.91731711264146,83.36560484872547,84.33153067501453,84.59034972011706,83.624423893828,84.59034972011706,85.2974565013036,86.26338232759267,85.55627554640613,86.52220137269519,83.88324293893052,83.88324293893052,84.84916876521959,86.78102041779772,83.88324293893052,84.84916876521959,85.81509459150865,83.69377424794901,81.76192259537086,83.4349552028465,82.72784842165993,83.69377424794901,82.72784842165993,81.76192259537086,83.69377424794901,83.4349552028465,82.98666746676246,82.02074164047339,83.95259329305154,82.98666746676246,83.95259329305154,84.40088102913556,85.36680685542463,83.69377424794901,84.65970007423807,85.62562590052714,84.40088102913556,85.36680685542463,83.4349552028465,84.65970007423807,85.62562590052714,86.3327326817137,87.29865850800276,86.5915517268162,87.55747755310527,86.3327326817137,87.29865850800276,86.5915517268162,87.55747755310527,84.9185191193406,85.88444494562967,84.40088102913556,84.65970007423807,85.62562590052714,85.36680685542463,84.40088102913556,84.65970007423807,85.62562590052714,86.3327326817137,87.29865850800276,86.5915517268162,87.55747755310527,84.9185191193406,92.83539442063464,92.57657537553213,92.83539442063464,93.80132024692371,94.76724607321279,93.80132024692371,93.5425012018212,94.76724607321279,93.09421346573717,94.06013929202624,95.02606511831532,95.28488416341783,94.06013929202624,95.02606511831532,94.31895833712875,95.28488416341783,87.48812719898426,86.52220137269519,87.48812719898426,89.16115980645988,90.12708563274894,87.74694624408679,87.03983946290023,88.0057652891893,88.97169111547838,88.0057652891893,88.97169111547838,89.93761694176744,90.644723722954,89.93761694176744,90.90354276805651,89.16115980645988,90.12708563274894,90.38590467785147,88.0057652891893,88.97169111547838,88.97169111547838,90.644723722954,90.90354276805651,89.93761694176744,90.90354276805651,91.09301145903801,92.3177563304296,93.02486311161614,93.28368215671867,93.99078893790522,94.24960798300775,92.83539442063464,91.86946859434558,91.61064954924306,92.57657537553213,91.86946859434558,92.83539442063464,93.80132024692371,94.76724607321279,93.5425012018212,94.50842702811028,93.80132024692371,94.76724607321279,91.09301145903801,91.35183050414054,92.3177563304296,93.02486311161614,93.99078893790522,92.05893728532708,93.28368215671867,94.24960798300775,94.24960798300775,93.99078893790522,91.61064954924306,92.57657537553213,91.86946859434558,92.83539442063464,93.5425012018212,94.50842702811028,88.26458433429183,89.2305101605809,88.26458433429183,89.2305101605809,90.19643598686997,88.26458433429183,89.2305101605809,88.26458433429183,89.2305101605809,90.19643598686997,91.16236181315904,93.09421346573717,94.06013929202624,95.02606511831532,94.31895833712875,95.28488416341783,95.02606511831532,94.31895833712875,94.06013929202624,95.28488416341783,95.28488416341783,92.64592572965314,93.61185155594221,94.57777738223128,103.13240911059086,104.09833493687992,99.52752485053712,100.49345067682619,101.45937650311525,99.52752485053712,99.52752485053712,100.49345067682619,101.45937650311525,100.49345067682619,101.45937650311525,95.66382154538084,96.62974737166991,99.52752485053712,100.49345067682619,101.90766423919928,101.90766423919928,103.13240911059086,103.39122815569338,102.16648328430179,101.20055745801272,102.42530232940432,103.39122815569338,104.09833493687992,97.85449224306149,97.85449224306149,98.11331128816401,95.73317189950185,95.73317189950185,99.78634389563963,100.7522697219287,101.71819554821776,101.01108876703123,101.97701459332029,100.30398198584469,100.5628010309472,100.30398198584469,100.5628010309472,101.26990781213375,101.52872685723626,101.26990781213375,101.52872685723626,98.82041806935055,98.56159902424804,99.78634389563963,99.07923711445308,100.04516294074216,98.82041806935055,99.78634389563963,99.07923711445308,100.04516294074216,100.7522697219287,101.71819554821776,101.01108876703123,101.97701459332029,100.7522697219287,101.71819554821776,101.01108876703123,98.37213033326654,99.3380561595556,100.30398198584469,95.99199094460438,96.95791677089345,96.2508099897069,97.21673581599596,95.99199094460438,96.69909772579092,96.95791677089345,96.2508099897069,97.21673581599596,98.18266164228503,98.18266164228503,98.44148068738755,98.70029973249007,99.66622555877913,95.21553380929682,96.88856641677242,97.85449224306149,97.14738546187495,98.11331128816401,97.85449224306149,97.14738546187495,98.11331128816401,96.44027868068841,97.40620450697747,98.37213033326654,97.66502355207999,98.63094937836905,97.40620450697747,98.37213033326654,96.69909772579092,97.66502355207999,98.63094937836905,94.95671476419429,95.92264059048335,95.21553380929682,96.18145963558588,96.88856641677242,97.85449224306149,97.14738546187495,98.11331128816401,97.66502355207999,98.63094937836905,98.82041806935055,99.78634389563963,99.07923711445308,100.04516294074216,98.82041806935055,99.78634389563963,99.07923711445308,100.7522697219287,99.3380561595556,100.30398198584469,99.59687520465812,99.3380561595556,98.82041806935055,99.07923711445308,95.73317189950185,95.99199094460438,96.95791677089345,96.2508099897069,97.21673581599596,95.99199094460438,96.95791677089345,96.2508099897069,97.21673581599596,97.92384259718251,98.18266164228503,97.47555486109849,96.50962903480942,97.734373906201,96.50962903480942,97.47555486109849,98.44148068738755,99.40740651367662,98.70029973249007,99.66622555877913,98.44148068738755,96.95791677089345,95.02606511831532,95.99199094460438,96.2508099897069,97.21673581599596,97.21673581599596,97.92384259718251,98.18266164228503,99.14858746857409,98.18266164228503,99.14858746857409,96.50962903480942,97.47555486109849,97.47555486109849,98.44148068738755,99.40740651367662,98.44148068738755,99.40740651367662,100.37333233996569,101.33925816625477,100.37333233996569,101.33925816625477,103.6500472007959,102.68412137450683,103.6500472007959,102.68412137450683,102.42530232940432,103.39122815569338,103.6500472007959,106.61717503378414,107.5831008600732,108.54902668636227,107.84191990517571,110.4808783389404,110.22205929383787,105.01349278042952,105.97941860671858,105.27231182553204,106.23823765182111,108.17008930439926,108.42890834950178,109.13601513068832,109.39483417579085,11.540341932729344,11.799160977831864,11.799160977831864,11.540341932729344,7.607288273452055,8.573214099741122,8.832033144843644,7.866107318554576,7.607288273452055,8.573214099741122,7.866107318554576,8.832033144843644,9.539139926030192,10.505065752319261,9.797958971132712,10.763884797421781,9.539139926030192,10.505065752319261,10.763884797421781,9.090852189946165,8.124926363657096,9.090852189946165,10.056778016235233,11.022703842524301,9.349671235048685,10.315597061337755,10.056778016235233,11.022703842524301,10.315597061337755,9.349671235048685,7.866107318554576,8.832033144843644,8.573214099741122,9.539139926030192,10.505065752319261,9.797958971132712,10.763884797421781,8.124926363657096,9.090852189946165,10.056778016235233,11.022703842524301,9.608490280151205,10.574416106440275,9.608490280151205,10.574416106440275,12.954555495102436,12.954555495102436,13.920481321391506,12.954555495102436,12.954555495102436,13.920481321391506,13.661662276288986,13.661662276288986,13.920481321391506,16.55943975515619,17.525365581445257,17.266546536342737,18.491291407734327,16.81825880025871,16.81825880025871,17.07707784536123,17.78418462654778,17.78418462654778,12.50626775901841,13.47219358530748,12.765086804120932,13.73101263041,12.50626775901841,13.47219358530748,12.765086804120932,13.73101263041,14.43811941159655,14.696938456699069,15.662864282988137,14.43811941159655,14.696938456699069,15.662864282988137,12.057980022934384,13.023905849223453,13.98983167551252,12.057980022934384,13.023905849223453,13.98983167551252,14.955757501801589,15.921683328090658,14.955757501801589,15.921683328090658,14.248650720615041,15.21457654690411,16.18050237319318,12.765086804120932,13.73101263041,13.47219358530748,13.73101263041,13.023905849223453,13.98983167551252,14.955757501801589,18.819460806957863,17.853534980668794,18.112354025771317,16.887609154379724,17.853534980668794,18.112354025771317,17.146428199482244,18.819460806957863,19.078279852060383,19.078279852060383,11.470991578608327,13.213374540204958,13.213374540204958,14.179300366494028,14.179300366494028,11.470991578608327,11.729810623710849,16.55943975515619,17.525365581445257,18.491291407734327,16.81825880025871,17.78418462654778,17.78418462654778,18.750110452836847,18.0430036716503,19.00892949793937,18.491291407734327,18.491291407734327,17.78418462654778,18.750110452836847,17.525365581445257,18.0430036716503,19.00892949793937,18.750110452836847,12.50626775901841,13.47219358530748,12.24744871391589,12.765086804120932,13.73101263041,13.47219358530748,14.43811941159655,14.43811941159655,15.662864282988137,15.404045237885615,15.921683328090658,16.18050237319318,15.662864282988137,15.921683328090658,16.18050237319318,15.921683328090658,15.662864282988137,16.18050237319318,16.628790109277205,16.369971064174685,18.560641761855344,18.560641761855344,17.594715935566274,16.887609154379724,16.887609154379724,17.853534980668794,17.146428199482244,20.04420567834945,19.78538663324693,15.404045237885615,16.369971064174685,16.628790109277205,17.594715935566274,16.628790109277205,18.560641761855344,16.887609154379724,17.853534980668794,17.146428199482244,18.112354025771317,16.887609154379724,17.853534980668794,17.146428199482244,18.819460806957863,20.04420567834945,19.457217234023396,19.457217234023396,19.716036279125916,19.716036279125916,20.751312459536,21.010131504638522,21.97605733092759,19.78538663324693,20.751312459536,21.717238285825065,21.010131504638522,21.97605733092759,21.010131504638522,21.97605733092759,18.629992115976357,18.629992115976357,18.371173070873837,19.595917942265423,19.337098897162903,20.561843768554493,18.888811161078877,18.888811161078877,19.147630206181397,19.854736987367946,20.820662813657012,20.113556032470466,18.629992115976357,19.337098897162903,19.595917942265423,20.561843768554493,19.595917942265423,18.888811161078877,19.147630206181397,18.888811161078877,19.147630206181397,19.854736987367946,20.820662813657012,20.113556032470466,21.079481858759536,18.629992115976357,19.854736987367946,20.113556032470466,20.372375077572986,19.40644925128392,20.372375077572986,16.439321418295698,20.303024723451973,18.888811161078877,19.147630206181397,19.854736987367946,20.113556032470466,17.405247244584768,17.405247244584768,20.303024723451973,21.268950549741042,22.23487637603011,21.527769594843562,22.493695421132628,21.268950549741042,22.23487637603011,20.561843768554493,21.527769594843562,22.493695421132628,21.268950549741042,20.303024723451973,22.23487637603011,20.561843768554493,21.527769594843562,22.493695421132628,21.786588639946082,21.786588639946082,22.752514466235148,15.921683328090658,16.18050237319318,16.887609154379724,17.146428199482244,21.268950549741042,22.23487637603011,21.527769594843562,22.493695421132628,29.962282986342657,30.221102031445177,30.928208812631723,31.187027857734243,32.152953684023316,30.479921076547697,30.479921076547697,30.738740121650217,31.445846902836763,32.411772729125836,31.704665947939283,30.738740121650217,32.670591774228356,31.445846902836763,31.704665947939283,33.11887951031238,33.3776985554149,34.34362438170397,33.63651760051742,34.60244342680649,32.929410819330876,33.89533664561994,37.75903995077621,38.72496577706528,38.01785899587874,38.983784822167806,38.72496577706528,38.983784822167806,39.69089160335435,40.65681742964342,39.94971064845687,40.91563647474594,39.69089160335435,39.94971064845687,39.242603867270326,41.174455519848465,41.881562301035004,45.296977870107256,46.71119143248035,46.00408465129381,45.74526560619128,45.038158825004736,46.970010477582875,46.26290369639633,50.38542604665512,50.1266070015526,51.351351872944186,49.67831926546857,50.64424509175764,51.610170918046705,50.38542604665512,51.351351872944186,51.610170918046705,52.31727769923326,52.57609674433578,53.542022570624844,51.868989963149225,52.8349157894383,54.50794839691391,56.69861909459457,57.664544920883635,56.95743813969709,57.923363965986155,57.923363965986155,59.337577528359255,58.63047074717271,58.37165170207019,59.596396573461774,58.88928979227523,59.855215618564294,57.664544920883635,58.63047074717271,58.182183011088675,59.14810883737775,64.1672066598046,65.13313248609367,64.1672066598046,64.42602570490712,65.39195153119618,63.718918923720565,64.68484475000965,63.460099878618045,64.42602570490712,65.13313248609367,65.39195153119618,63.718918923720565,64.68484475000965,63.977737968823085,64.94366379511216,63.977737968823085,64.94366379511216,70.03211197166002,70.29093101676254,70.54975006186505,70.54975006186505,70.9980377979491,71.25685684305161,72.22278266934067,71.51567588815414,72.4816017144432,71.51567588815414,73.18870849562974,73.44752754073227,74.41345336702133,71.77449493325665,72.74042075954571,73.70634658583478,74.67227241212385,72.99923980464824,73.9651656309373,76.41465537372048,77.38058120000956,76.41465537372048,77.38058120000956,78.34650702629862,79.31243285258769,78.34650702629862,79.31243285258769,76.15583632861797,77.12176215490705,77.38058120000956,76.41465537372048,76.15583632861797,77.12176215490705,77.38058120000956,78.08768798119611,79.05361380748518,78.34650702629862,79.31243285258769,78.08768798119611,78.34650702629862,79.05361380748518,79.31243285258769,76.673474418823,76.673474418823,77.63940024511209,78.60532607140115,79.57125189769022,78.60532607140115,79.57125189769022,82.3996790224364,82.3996790224364,81.24428450516582,82.21021033145489,83.17613615774397,82.21021033145489,83.17613615774397,80.72664641496078,81.69257224124985,80.98546546006331,83.17613615774397,81.95139128635238,83.36560484872547,84.33153067501453,83.624423893828,84.59034972011706,83.36560484872547,84.33153067501453,83.624423893828,84.59034972011706,85.2974565013036,85.55627554640613,85.2974565013036,85.55627554640613,84.14206198403303,85.1079878103221,84.14206198403303,80.53717772397928,81.50310355026835,80.7959967690818,81.76192259537086,82.46902937655742,83.4349552028465,82.72784842165993,82.46902937655742,83.4349552028465,82.72784842165993,83.69377424794901,81.76192259537086,80.7959967690818,82.46902937655742,83.4349552028465,81.50310355026835,82.72784842165993,83.69377424794901,82.46902937655742,83.4349552028465,82.72784842165993,83.69377424794901,84.40088102913556,85.36680685542463,85.62562590052714,84.40088102913556,85.36680685542463,84.65970007423807,85.62562590052714,86.3327326817137,86.5915517268162,84.40088102913556,85.1079878103221,85.36680685542463,84.65970007423807,85.62562590052714,84.40088102913556,85.17733816444311,86.14326399073218,86.85037077191873,87.8162965982078,86.85037077191873,85.88444494562967,87.8162965982078,87.55747755310527,87.10918981702125,80.72664641496078,81.69257224124985,80.98546546006331,81.95139128635238,85.17733816444311,86.14326399073218,86.85037077191873,85.88444494562967,86.5915517268162,87.55747755310527,87.8162965982078,87.10918981702125,88.97169111547838,89.93761694176744,88.97169111547838,88.97169111547838,88.71287207037587,89.67879789666493,89.93761694176744,88.71287207037587,89.67879789666493,89.93761694176744,94.24960798300775,93.99078893790522,92.83539442063464,92.83539442063464,94.50842702811028,93.80132024692371,93.5425012018212,94.76724607321279,94.50842702811028,93.80132024692371,94.76724607321279,92.83539442063464,93.80132024692371,94.76724607321279,88.26458433429183,89.2305101605809,90.19643598686997,90.90354276805651,91.16236181315904,88.52340337939434,89.48932920568342,88.52340337939434,89.48932920568342,91.16236181315904,90.45525503197248,90.19643598686997,91.42118085826155,91.16236181315904,90.45525503197248,90.19643598686997,91.42118085826155,88.78222242449687,89.74814825078595,88.78222242449687,89.74814825078595,90.71407407707501,91.67999990336408,90.71407407707501,91.67999990336408,93.35303251083968,93.09421346573717,94.31895833712875,94.06013929202624,95.02606511831532,91.67999990336408,92.64592572965314,93.61185155594221,92.64592572965314,93.61185155594221,92.90474477475566,94.57777738223128,95.54370320852036,94.57777738223128,92.38710668455062,93.35303251083968,92.1282876394481,93.09421346573717,92.38710668455062,93.35303251083968,93.09421346573717,94.06013929202624,95.02606511831532,94.31895833712875,94.06013929202624,95.28488416341783,92.64592572965314,93.61185155594221,92.64592572965314,93.61185155594221,92.90474477475566,93.87067060104472,94.57777738223128,94.57777738223128,95.54370320852036,94.83659642733379,88.52340337939434,91.42118085826155,88.78222242449687,93.09421346573717,92.38710668455062,92.1282876394481,93.35303251083968,94.06013929202624,94.31895833712875,95.28488416341783,92.64592572965314,93.61185155594221,94.57777738223128,95.54370320852036,94.83659642733379,94.95671476419429,95.92264059048335,95.21553380929682,96.18145963558588,94.95671476419429,95.92264059048335,95.21553380929682,94.24960798300775,96.18145963558588,96.88856641677242,97.85449224306149,97.14738546187495,98.11331128816401,96.88856641677242,97.85449224306149,97.14738546187495,98.11331128816401,95.47435285439934,96.44027868068841,95.47435285439934,95.73317189950185,96.69909772579092,97.40620450697747,97.40620450697747,98.37213033326654,96.44027868068841,97.66502355207999,98.63094937836905,96.69909772579092,97.66502355207999,98.63094937836905,98.82041806935055,99.78634389563963,99.07923711445308,98.82041806935055,99.07923711445308,99.3380561595556,100.30398198584469,99.59687520465812,99.59687520465812,95.99199094460438,96.95791677089345,97.92384259718251,99.14858746857409,99.40740651367662,99.40740651367662,95.99199094460438,96.95791677089345,97.92384259718251,98.18266164228503,98.44148068738755,99.40740651367662,100.82162007604973,99.14858746857409,100.11451329486316,101.08043912115224,99.85569424976065,98.88976842347158,100.82162007604973,100.11451329486316,101.08043912115224,101.78754590233879,101.78754590233879,102.75347172862786,102.0463649474413,103.01229077373037,100.37333233996569,101.33925816625477,100.6321513850682,101.59807721135728,100.37333233996569,101.33925816625477,100.6321513850682,101.59807721135728,102.30518399254383,102.56400303764634,103.52992886393541,102.30518399254383,102.56400303764634,103.2711098188329,103.52992886393541,99.85569424976065,98.88976842347158,100.82162007604973,100.11451329486316,101.08043912115224,101.78754590233879,102.75347172862786,102.0463649474413,103.01229077373037,102.0463649474413,103.01229077373037,100.37333233996569,102.30518399254383,103.2711098188329,98.44148068738755,99.40740651367662,99.66622555877913,100.37333233996569,100.6321513850682,102.30518399254383,103.2711098188329,102.56400303764634,103.52992886393541,102.75347172862786,103.97821660001944,103.71939755491692,104.68532338120599,104.9441424263085,103.71939755491692,102.49465268352533,103.4605785098144,104.68532338120599,103.97821660001944,104.9441424263085,105.65124920749506,105.91006825259757,105.65124920749506,105.91006825259757,103.71939755491692,103.4605785098144,104.23703564512196,105.20296147141103,104.49585469022448,105.46178051651354,106.42770634280261,108.54902668636227,108.54902668636227,109.51495251265133,109.2561334675488,109.51495251265133,109.2561334675488,104.23703564512196,105.20296147141103,104.49585469022448,105.46178051651354,105.46178051651354,106.42770634280261,107.39363216909169,106.42770634280261,107.39363216909169,85.43615720954564,86.4020830358347,85.43615720954564,86.4020830358347,103.78874790903794,104.04756695414045,102.82282208274887,103.78874790903794,104.04756695414045,104.754673735327,105.72059956161607,105.01349278042952,105.97941860671858,104.754673735327,105.72059956161607,105.01349278042952,105.97941860671858,106.94534443300765,107.91127025929674,106.94534443300765,107.91127025929674,108.17008930439926,105.72059956161607,106.68652538790514]
        self.yobs = [7.329886856967996,6.3639610306789285,6.3639610306789285,7.329886856967996,8.295812683257065,9.261738509546133,8.295812683257065,9.261738509546133,9.261738509546133,10.227664335835202,7.329886856967996,6.3639610306789285,7.329886856967996,8.295812683257065,8.295812683257065,8.554631728359585,9.261738509546133,7.329886856967996,6.3639610306789285,8.295812683257065,9.261738509546133,2.689726416504161,2.4309073714016405,2.1720883262991197,1.3956311909915573,2.689726416504161,2.4309073714016405,2.1720883262991197,1.3956311909915573,1.1368121458890366,0.8779931007865158,1.1368121458890366,0.8779931007865158,7.329886856967996,7.0710678118654755,7.0710678118654755,6.105141985576408,7.0710678118654755,6.812248766762955,8.036993638154543,9.002919464443613,8.036993638154543,7.778174593052023,9.002919464443613,8.744100419341091,8.036993638154543,7.778174593052023,9.002919464443613,8.744100419341091,7.519355547949503,8.485281374238571,9.96884529073268,9.96884529073268,9.71002624563016,6.3639610306789285,6.105141985576408,7.329886856967996,7.0710678118654755,5.3286848502688455,3.6556522427932294,3.3968331976907087,4.362759023979777,3.6556522427932294,3.3968331976907087,4.621578069082298,4.362759023979777,6.105141985576408,5.846322940473887,7.0710678118654755,6.812248766762955,6.105141985576408,5.846322940473887,5.139216159287339,4.880397114184818,7.0710678118654755,6.812248766762955,5.3286848502688455,5.587503895371366,6.553429721660434,5.069865805166325,4.103939978877256,3.138014152588188,4.103939978877256,3.8451209337747354,2.3615570172806257,3.327482843569694,2.3615570172806257,2.6203760623831465,3.327482843569694,5.069865805166325,6.0357916314553925,5.069865805166325,4.811046760063804,7.778174593052023,6.812248766762955,8.036993638154543,9.002919464443613,8.744100419341091,9.002919464443613,8.744100419341091,9.96884529073268,9.71002624563016,10.934771117021748,10.675952071919228,9.96884529073268,9.71002624563016,10.934771117021748,10.675952071919228,9.451207200527639,9.451207200527639,8.036993638154543,7.778174593052023,8.036993638154543,7.778174593052023,9.002919464443613,9.71002624563016,10.675952071919228,9.451207200527639,9.451207200527639,7.001717457744461,6.7428984126419405,7.96764328403353,8.22646232913605,7.708824238931008,7.001717457744461,6.7428984126419405,7.96764328403353,7.708824238931008,8.933569110322598,9.19238815542512,8.674750065220078,8.933569110322598,8.674750065220078,8.157111975015036,9.123037801304104,6.7428984126419405,7.96764328403353,7.001717457744461,7.708824238931008,8.157111975015036,8.415931020117556,9.381856846406624,9.123037801304104,8.157111975015036,8.415931020117556,9.381856846406624,9.123037801304104,3.6556522427932294,3.3968331976907087,6.105141985576408,4.880397114184818,5.846322940473887,7.0710678118654755,6.812248766762955,3.138014152588188,2.3615570172806257,8.036993638154543,7.778174593052023,9.002919464443613,8.485281374238571,8.22646232913605,10.675952071919228,9.71002624563016,10.675952071919228,10.417133026816707,9.451207200527639,9.19238815542512,10.417133026816707,10.158313981714187,8.22646232913605,9.451207200527639,8.485281374238571,9.19238815542512,10.417133026816707,10.158313981714187,8.157111975015036,8.415931020117556,9.381856846406624,9.123037801304104,8.157111975015036,8.415931020117556,9.381856846406624,9.123037801304104,7.96764328403353,8.933569110322598,2.102737972178105,3.068663798467173,2.102737972178105,3.068663798467173,7.898292929912515,2.102737972178105,11.641877898208296,11.383058853105776,11.124239808003255,8.725518047959554,8.466699002857034,7.500773176567964,8.466699002857034,8.725518047959554,8.207879957754512,7.9490609126519916,7.241954131465444,8.207879957754512,7.9490609126519916,9.691443874248622,9.432624829146102,9.691443874248622,9.432624829146102,9.17380578404358,8.91498673894106,10.13973161033265,9.880912565230128,9.17380578404358,8.91498673894106,10.13973161033265,9.880912565230128,8.656167693838539,9.622093520127608,9.363274475025086,7.690241867549471,7.690241867549471,8.656167693838539,8.397348648736017,9.622093520127608,9.363274475025086,8.656167693838539,8.397348648736017,9.622093520127608,9.363274475025086,10.846838391519196,10.588019346416676,10.329200301314154,10.588019346416676,10.329200301314154,8.327998294615004,10.00103090209062,9.035105075801551,9.552743166006593,8.586817339717525,9.293924120904071,10.51866899229566,10.259849947193139,9.552743166006593,8.586817339717525,9.293924120904071,8.327998294615004,10.51866899229566,10.259849947193139,9.035105075801551,8.776286030699032,10.00103090209062,9.7422118569881,9.035105075801551,8.776286030699032,10.00103090209062,9.7422118569881,11.225775773482209,10.966956728379689,10.708137683277169,8.51746698559651,9.483392811885578,8.51746698559651,9.483392811885578,10.449318638174647,9.672861502867086,9.931680547969606,10.638787329156154,10.897606374258674,9.672861502867086,9.931680547969606,10.897606374258674,10.638787329156154,8.448116631475495,8.189297586372973,9.414042457764564,10.379968284053632,9.414042457764564,9.155223412662043,10.379968284053632,10.12114923895111,9.344692103643549,9.085873058541027,9.344692103643549,9.085873058541027,11.863532200547741,11.604713155445221,11.604713155445221,11.3458941103427,10.051798884830095,9.792979839727575,10.569436975035138,9.60351114874607,10.310617929932617,10.051798884830095,11.276543756221685,11.017724711119165,10.569436975035138,10.310617929932617,10.051798884830095,11.276543756221685,11.535362801324208,11.017724711119165,9.792979839727575,9.534160794625056,10.758905666016645,10.500086620914125,9.792979839727575,9.534160794625056,10.758905666016645,10.500086620914125,11.983650537408232,11.724831492305713,11.466012447203193,9.275341749522534,10.241267575811602,9.464810440504042,10.43073626679311,11.396662093082178,10.43073626679311,10.68955531189563,11.396662093082178,8.947172350298999,7.722427478907409,7.46360843380489,8.688353305196479,8.42953426009396,7.722427478907409,7.46360843380489,8.688353305196479,7.981246524009929,8.42953426009396,9.913098176588067,10.171917221690588,9.654279131485547,9.395460086383027,9.205991395401519,8.947172350298999,9.205991395401519,8.947172350298999,7.722427478907409,7.46360843380489,7.981246524009929,8.688353305196479,8.42953426009396,8.688353305196479,8.42953426009396,10.171917221690588,9.913098176588067,11.137843047979656,10.879024002877134,10.171917221690588,9.913098176588067,11.137843047979656,10.879024002877134,9.654279131485547,9.395460086383027,9.654279131485547,9.395460086383027,10.620204957774614,12.362587919371245,12.103768874268724,8.170715214991436,12.223887211129217,13.189813037418284,11.775599475045189,10.5508546036536,11.516780429942669,11.257961384840149,10.5508546036536,11.257961384840149,12.482706256231737,12.223887211129217,13.448632082520804,13.189813037418284,12.482706256231737,11.965068166026693,12.930993992315761,10.222685204430066,11.965068166026693,11.447430075821654,11.188611030719134,12.413355902110721,12.154536857008202,11.447430075821654,11.188611030719134,12.154536857008202,6.996738326339322,6.7379192812368025,6.479100236134283,11.378079721700638,9.963866159327546,10.929791985616614,10.67097294051409,11.895717811905682,11.636898766803158,10.929791985616614,10.67097294051409,11.895717811905682,11.636898766803158,10.41215389541157,11.378079721700638,11.119260676598119,10.41215389541157,10.15333485030905,11.378079721700638,11.119260676598119,7.445026062423351,7.1862070173208314,14.414557908809874,12.344005547989708,12.085186502887188,12.602824593092228,12.861643638194751,12.602824593092228,12.344005547989708,12.085186502887188,12.344005547989708,12.085186502887188,13.309931374278776,12.274655193868693,12.015836148766173,12.015836148766173,12.98176197505524,9.825165451085516,9.566346405982992,9.825165451085516,9.566346405982992,9.307527360880473,7.8239634443863615,8.78988927067543,8.53107022557291,8.78988927067543,8.53107022557291,5.7026431008267195,5.961462145929243,5.961462145929243,5.7026431008267195,5.4438240557242,6.927387972218312,6.668568927115788,6.668568927115788,6.927387972218312,6.927387972218312,6.668568927115788,6.409749882013268,6.1509308369107485,7.375675708302337,7.116856663199817,5.4438240557242,6.409749882013268,6.1509308369107485,7.375675708302337,7.116856663199817,8.082782489488885,8.082782489488885,6.858037618097294,6.599218572994774,6.858037618097294,6.599218572994774,6.340399527892254,7.8239634443863615,7.565144399283842,7.8239634443863615,7.565144399283842,7.306325354181322,6.340399527892254,8.53107022557291,8.27225118047039,7.306325354181322,8.53107022557291,8.27225118047039,10.791091277374585,10.532272232272062,10.273453187169542,9.755815096964499,9.496996051861979,10.462921878151047,9.238177006759459,8.97935796165694,10.204102833048527,9.945283787946007,10.791091277374585,10.532272232272062,9.566346405982992,11.757017103663653,11.757017103663653,9.307527360880473,10.273453187169542,12.72294292995272,13.68886875624179,13.94768780134431,13.430049711139267,12.72294292995272,13.68886875624179,13.430049711139267,10.98055996835609,11.946485794645158,11.757017103663653,11.49819805856113,11.757017103663653,11.49819805856113,11.946485794645158,9.755815096964499,9.496996051861979,10.462921878151047,10.721740923253567,10.462921878151047,9.238177006759459,8.97935796165694,10.204102833048527,9.945283787946007,11.687666749542634,11.687666749542634,11.428847704440114,10.911209614235075,11.687666749542634,11.428847704440114,11.170028659337595,14.844263273512363,15.361901363717402,13.878337447223295,15.103082318614883,14.844263273512363,15.103082318614883,15.361901363717402,14.844263273512363,13.878337447223295,16.06900814490395,16.32782719000647,15.810189099801432,16.06900814490395,15.810189099801432,13.619518402120772,13.360699357018252,14.844263273512363,14.58544422840984,14.32662518330732,13.619518402120772,13.360699357018252,13.878337447223295,14.58544422840984,14.32662518330732,13.101880311915732,12.843061266813212,14.0678061382048,13.80898709310228,13.101880311915732,12.843061266813212,14.0678061382048,13.80898709310228,15.551370054698909,15.292551009596389,13.619518402120772,14.58544422840984,14.32662518330732,13.360699357018252,13.619518402120772,14.58544422840984,14.32662518330732,13.101880311915732,12.843061266813212,14.0678061382048,13.80898709310228,15.551370054698909,10.324221169909018,9.358295343619949,10.324221169909018,10.065402124806498,9.806583079703978,10.065402124806498,9.099476298517429,9.806583079703978,11.290146996198086,11.031327951095566,10.772508905993046,11.738434732282114,11.031327951095566,10.772508905993046,11.997253777384634,11.738434732282114,9.686464742843487,9.945283787946007,9.686464742843487,8.202900826349376,7.944081781246855,10.652390569132555,11.877135440524144,11.618316395421624,11.359497350319101,11.618316395421624,11.359497350319101,11.100678305216581,9.875933433824992,11.100678305216581,10.841859260114061,8.202900826349376,7.944081781246855,8.910007607535924,11.618316395421624,11.359497350319101,11.359497350319101,9.875933433824992,10.841859260114061,11.100678305216581,10.841859260114061,7.685262736144332,8.39236951733088,7.167624645939292,8.133550472228361,6.908805600836772,7.874731427125841,10.324221169909018,10.583040215011538,9.617114388722468,9.358295343619949,10.583040215011538,10.324221169909018,10.065402124806498,9.806583079703978,9.099476298517429,8.840657253414909,10.065402124806498,9.806583079703978,7.685262736144332,8.6511885624334,8.39236951733088,7.167624645939292,6.908805600836772,7.426443691041812,8.133550472228361,7.874731427125841,7.874731427125841,6.908805600836772,9.617114388722468,9.358295343619949,10.583040215011538,10.324221169909018,9.099476298517429,8.840657253414909,12.584242221710692,12.325423176608169,12.584242221710692,12.325423176608169,12.066604131505649,12.584242221710692,12.325423176608169,12.584242221710692,12.325423176608169,12.066604131505649,11.807785086403129,11.290146996198086,11.031327951095566,10.772508905993046,11.997253777384634,11.738434732282114,10.772508905993046,11.997253777384634,11.031327951095566,11.738434732282114,11.738434732282114,13.480817693878743,13.221998648776223,12.963179603673703,2.388763497233427,2.129944452130907,4.3899655039325785,4.131146458830059,3.8723274137275387,4.3899655039325785,4.3899655039325785,4.131146458830059,3.8723274137275387,4.131146458830059,3.8723274137275387,5.425241684342661,5.166422639240142,4.3899655039325785,4.131146458830059,1.681656716046882,1.681656716046882,2.388763497233427,3.3546893235224955,2.6475825423359503,2.90640158743847,3.613508368625019,3.3546893235224955,2.129944452130907,5.8735294204266895,5.8735294204266895,6.839455246715758,9.547764034601459,9.547764034601459,5.355891330221646,5.097072285119126,4.8382532400166065,6.062998111408195,5.804179066305675,7.2877429827997835,8.253668809088852,7.2877429827997835,8.253668809088852,7.028923937697264,7.994849763986331,7.028923937697264,7.994849763986331,5.614710375324166,4.648784549035098,5.355891330221646,6.580636201613235,6.321817156510715,5.614710375324166,5.355891330221646,6.580636201613235,6.321817156510715,5.097072285119126,4.8382532400166065,6.062998111408195,5.804179066305675,5.097072285119126,4.8382532400166065,6.062998111408195,7.805381073004827,7.546562027902303,7.2877429827997835,10.513689860890526,10.254870815788003,11.479615687179594,11.22079664207707,10.513689860890526,9.288944989498935,10.254870815788003,11.479615687179594,11.22079664207707,10.96197759697455,10.96197759697455,11.92790342326362,12.893829249552688,12.635010204450168,7.615912382023321,6.132348465529209,5.8735294204266895,7.098274291818278,6.839455246715758,5.8735294204266895,7.098274291818278,6.839455246715758,8.323019163209866,8.064200118107346,7.805381073004827,9.030125944396415,8.771306899293895,8.064200118107346,7.805381073004827,9.288944989498935,9.030125944396415,8.771306899293895,6.649986555734253,6.391167510631729,7.615912382023321,7.357093336920798,6.132348465529209,5.8735294204266895,7.098274291818278,6.839455246715758,9.030125944396415,8.771306899293895,5.614710375324166,5.355891330221646,6.580636201613235,6.321817156510715,5.614710375324166,5.355891330221646,6.580636201613235,5.097072285119126,7.546562027902303,7.2877429827997835,8.512487854191372,7.546562027902303,5.614710375324166,6.580636201613235,9.547764034601459,10.513689860890526,10.254870815788003,11.479615687179594,11.22079664207707,10.513689860890526,10.254870815788003,11.479615687179594,11.22079664207707,9.996051770685483,10.96197759697455,12.18672246836614,12.445541513468664,13.152648294655208,12.445541513468664,12.18672246836614,11.92790342326362,11.6690843781611,12.893829249552688,12.635010204450168,11.92790342326362,10.254870815788003,10.772508905993046,10.513689860890526,11.479615687179594,11.22079664207707,11.22079664207707,9.996051770685483,10.96197759697455,10.703158551872031,10.96197759697455,10.703158551872031,12.445541513468664,12.18672246836614,12.18672246836614,11.92790342326362,11.6690843781611,11.92790342326362,11.6690843781611,11.410265333058577,11.151446287956057,11.410265333058577,11.151446287956057,4.320615149811563,4.579434194914087,4.320615149811563,4.579434194914087,3.613508368625019,3.3546893235224955,4.320615149811563,7.666680364762797,7.407861319660274,7.149042274557754,8.373787145949342,6.631404184352714,5.665478358063646,13.272766631515701,13.013947586413178,14.23869245780477,13.979873412702247,13.462235322497207,14.428161148786275,13.203416277394684,14.169342103683752,8.295812683257065,9.261738509546133,9.261738509546133,8.295812683257065,5.208566513408353,4.949747468305833,5.915673294594901,6.174492339697422,5.208566513408353,4.949747468305833,6.174492339697422,5.915673294594901,4.690928423203312,4.432109378100791,5.656854249492381,5.39803520438986,4.690928423203312,4.432109378100791,5.39803520438986,6.88159912088397,7.140418165986491,6.88159912088397,6.622780075781449,6.3639610306789285,7.847524947173038,7.588705902070517,6.622780075781449,6.3639610306789285,7.588705902070517,7.847524947173038,6.174492339697422,5.915673294594901,4.949747468305833,4.690928423203312,4.432109378100791,5.656854249492381,5.39803520438986,7.140418165986491,6.88159912088397,6.622780075781449,6.3639610306789285,8.813450773462106,8.554631728359585,8.813450773462106,8.554631728359585,5.846322940473887,5.846322940473887,5.587503895371366,5.846322940473887,5.846322940473887,5.587503895371366,4.621578069082298,4.621578069082298,5.587503895371366,3.8451209337747354,3.5863018886722147,2.6203760623831465,3.327482843569694,4.811046760063804,4.811046760063804,5.776972586352872,4.552227714961283,4.552227714961283,8.036993638154543,7.778174593052023,9.002919464443613,8.744100419341091,8.036993638154543,7.778174593052023,9.002919464443613,8.744100419341091,7.519355547949503,8.485281374238571,8.22646232913605,7.519355547949503,8.485281374238571,8.22646232913605,10.227664335835202,9.96884529073268,9.71002624563016,10.227664335835202,9.96884529073268,9.71002624563016,9.451207200527639,9.19238815542512,9.451207200527639,9.19238815542512,10.675952071919228,10.417133026816707,10.158313981714187,9.002919464443613,8.744100419341091,7.778174593052023,8.744100419341091,9.96884529073268,9.71002624563016,9.451207200527639,8.415931020117556,8.674750065220078,9.640675891509146,8.933569110322598,8.674750065220078,9.640675891509146,9.899494936611665,8.415931020117556,9.381856846406624,9.381856846406624,4.1732903329982705,6.812248766762955,6.812248766762955,6.553429721660434,6.553429721660434,4.1732903329982705,5.139216159287339,3.8451209337747354,3.5863018886722147,3.327482843569694,4.811046760063804,4.552227714961283,4.552227714961283,4.293408669858763,5.518153541250351,5.25933449614783,3.327482843569694,3.327482843569694,4.552227714961283,4.293408669858763,3.5863018886722147,5.518153541250351,5.25933449614783,4.293408669858763,8.036993638154543,7.778174593052023,7.0710678118654755,9.002919464443613,8.744100419341091,7.778174593052023,7.519355547949503,7.519355547949503,8.22646232913605,7.260536502846982,9.19238815542512,10.158313981714187,8.22646232913605,9.19238815542512,10.158313981714187,9.19238815542512,8.22646232913605,10.158313981714187,7.96764328403353,7.001717457744461,7.450005193828488,7.450005193828488,7.708824238931008,8.933569110322598,8.933569110322598,8.674750065220078,9.899494936611665,9.123037801304104,8.157111975015036,7.260536502846982,7.001717457744461,7.96764328403353,7.708824238931008,7.96764328403353,7.450005193828488,8.933569110322598,8.674750065220078,9.899494936611665,9.640675891509146,8.933569110322598,8.674750065220078,9.899494936611665,8.415931020117556,9.123037801304104,3.068663798467173,3.068663798467173,4.034589624756242,4.034589624756242,7.898292929912515,8.864218756201582,8.605399711099063,8.157111975015036,7.898292929912515,7.639473884809994,8.864218756201582,8.605399711099063,8.864218756201582,8.605399711099063,11.572527544087283,11.572527544087283,10.606601717798213,11.313708498984761,10.347782672695693,11.05488945388224,12.53845337037635,12.53845337037635,13.504379196665418,12.279634325273829,12.020815280171309,13.245560151562898,11.572527544087283,10.347782672695693,11.313708498984761,11.05488945388224,11.313708498984761,12.53845337037635,13.504379196665418,12.53845337037635,13.504379196665418,12.279634325273829,12.020815280171309,13.245560151562898,12.986741106460377,11.572527544087283,12.279634325273829,13.245560151562898,14.211485977851966,14.470305022954486,14.211485977851966,11.124239808003255,10.088963627593172,12.53845337037635,13.504379196665418,12.279634325273829,13.245560151562898,10.865420762900735,10.865420762900735,10.088963627593172,9.830144582490652,9.57132553738813,10.79607040877972,10.5372513636772,9.830144582490652,9.57132553738813,11.05488945388224,10.79607040877972,10.5372513636772,9.830144582490652,10.088963627593172,9.57132553738813,11.05488945388224,10.79607040877972,10.5372513636772,11.761996235068787,11.761996235068787,11.503177189966268,9.19238815542512,10.158313981714187,8.933569110322598,9.899494936611665,9.830144582490652,9.57132553738813,10.79607040877972,10.5372513636772,7.500773176567964,8.466699002857034,7.241954131465444,8.207879957754512,7.9490609126519916,9.432624829146102,9.432624829146102,10.39855065543517,9.17380578404358,8.91498673894106,10.13973161033265,10.39855065543517,9.880912565230128,9.17380578404358,10.13973161033265,7.690241867549471,8.656167693838539,8.397348648736017,9.622093520127608,9.363274475025086,10.846838391519196,10.588019346416676,9.552743166006593,9.293924120904071,10.51866899229566,10.259849947193139,9.293924120904071,10.259849947193139,9.035105075801551,8.776286030699032,10.00103090209062,9.7422118569881,9.035105075801551,10.00103090209062,11.225775773482209,10.708137683277169,9.483392811885578,10.638787329156154,8.189297586372973,9.414042457764564,8.448116631475495,9.672861502867086,9.155223412662043,10.379968284053632,10.310617929932617,9.344692103643549,10.051798884830095,11.535362801324208,11.276543756221685,11.017724711119165,10.310617929932617,10.051798884830095,11.017724711119165,9.792979839727575,10.758905666016645,10.500086620914125,11.983650537408232,11.724831492305713,10.241267575811602,10.68955531189563,10.43073626679311,11.655481138184697,11.396662093082178,11.396662093082178,8.947172350298999,10.171917221690588,9.205991395401519,9.913098176588067,11.137843047979656,10.879024002877134,10.43073626679311,10.171917221690588,12.362587919371245,12.103768874268724,7.653077124786395,7.394258079683875,7.653077124786395,8.619002951075464,8.360183905972944,9.843747822467051,9.584928777364532,8.877821996177984,8.619002951075464,7.394258079683875,8.360183905972944,9.843747822467051,9.584928777364532,10.80967364875612,10.5508546036536,10.80967364875612,10.5508546036536,10.222685204430066,11.188611030719134,12.154536857008202,12.154536857008202,9.963866159327546,10.929791985616614,10.67097294051409,11.895717811905682,11.636898766803158,11.895717811905682,10.41215389541157,11.378079721700638,11.119260676598119,12.861643638194751,12.602824593092228,12.344005547989708,12.085186502887188,13.568750419381296,13.309931374278776,14.72414493665187,14.46532589154935,14.72414493665187,14.46532589154935,14.20650684644683,13.94768780134431,14.20650684644683,13.94768780134431,13.7582191103628,13.49940006526028,14.46532589154935,14.72414493665187,13.7582191103628,13.49940006526028,14.46532589154935,13.24058102015776,12.98176197505524,14.20650684644683,13.94768780134431,13.24058102015776,14.20650684644683,12.98176197505524,13.94768780134431,15.690070762940937,15.690070762940937,15.431251717838418,15.172432672735898,14.913613627633378,15.172432672735898,14.913613627633378,10.014634142067022,10.014634142067022,13.430049711139267,13.171230666036747,12.912411620934227,13.171230666036747,12.912411620934227,11.49819805856113,11.23937901345861,12.464123884850197,12.912411620934227,12.205304839747678,9.755815096964499,9.496996051861979,10.721740923253567,10.462921878151047,9.755815096964499,9.496996051861979,10.721740923253567,10.462921878151047,9.238177006759459,10.204102833048527,9.238177006759459,10.204102833048527,12.653592575831704,12.394773530729184,12.653592575831704,14.654794582530858,14.395975537428335,15.620720408819926,15.361901363717402,14.137156492325815,13.878337447223295,15.103082318614883,14.137156492325815,13.878337447223295,15.103082318614883,14.844263273512363,15.361901363717402,15.620720408819926,14.137156492325815,13.878337447223295,14.395975537428335,15.103082318614883,14.844263273512363,14.137156492325815,13.878337447223295,15.103082318614883,14.844263273512363,13.619518402120772,13.360699357018252,14.32662518330732,13.619518402120772,13.360699357018252,14.58544422840984,14.32662518330732,13.101880311915732,14.0678061382048,13.619518402120772,12.394773530729184,13.360699357018252,14.58544422840984,14.32662518330732,13.619518402120772,16.517295880987977,16.258476835885457,15.03373196449387,14.77491291939135,15.03373196449387,15.292551009596389,14.77491291939135,13.80898709310228,15.999657790782937,11.49819805856113,11.23937901345861,12.464123884850197,12.205304839747678,16.517295880987977,16.258476835885457,15.03373196449387,15.292551009596389,14.0678061382048,13.80898709310228,14.77491291939135,15.999657790782937,11.359497350319101,11.100678305216581,11.359497350319101,11.359497350319101,10.393571524030031,10.134752478927512,11.100678305216581,10.393571524030031,10.134752478927512,11.100678305216581,7.874731427125841,6.908805600836772,10.324221169909018,10.324221169909018,8.840657253414909,10.065402124806498,9.099476298517429,9.806583079703978,8.840657253414909,10.065402124806498,9.806583079703978,10.324221169909018,10.065402124806498,9.806583079703978,12.584242221710692,12.325423176608169,12.066604131505649,10.841859260114061,11.807785086403129,13.55016804799976,13.291349002897237,13.55016804799976,13.291349002897237,11.807785086403129,13.032529957794717,12.066604131505649,12.773710912692197,11.807785086403129,13.032529957794717,12.066604131505649,12.773710912692197,14.51609387428883,14.257274829186306,14.51609387428883,14.257274829186306,13.998455784083786,13.739636738981266,13.998455784083786,13.739636738981266,12.256072822487154,11.290146996198086,11.997253777384634,11.031327951095566,10.772508905993046,13.739636738981266,13.480817693878743,13.221998648776223,13.480817693878743,13.221998648776223,14.44674352016781,12.963179603673703,12.704360558571183,12.963179603673703,12.514891867589673,12.256072822487154,11.548966041300606,11.290146996198086,12.514891867589673,12.256072822487154,11.290146996198086,11.031327951095566,10.772508905993046,11.997253777384634,11.031327951095566,11.738434732282114,13.480817693878743,13.221998648776223,13.480817693878743,13.221998648776223,14.44674352016781,14.18792447506529,12.963179603673703,12.963179603673703,12.704360558571183,13.929105429962771,13.55016804799976,12.773710912692197,14.51609387428883,11.290146996198086,12.514891867589673,11.548966041300606,12.256072822487154,11.031327951095566,11.997253777384634,11.738434732282114,13.480817693878743,13.221998648776223,12.963179603673703,12.704360558571183,13.929105429962771,6.649986555734253,6.391167510631729,7.615912382023321,7.357093336920798,6.649986555734253,6.391167510631729,7.615912382023321,7.874731427125841,7.357093336920798,6.132348465529209,5.8735294204266895,7.098274291818278,6.839455246715758,6.132348465529209,5.8735294204266895,7.098274291818278,6.839455246715758,8.581838208312389,8.323019163209866,8.581838208312389,9.547764034601459,9.288944989498935,8.064200118107346,8.064200118107346,7.805381073004827,8.323019163209866,9.030125944396415,8.771306899293895,9.288944989498935,9.030125944396415,8.771306899293895,5.614710375324166,5.355891330221646,6.580636201613235,5.614710375324166,6.580636201613235,7.546562027902303,7.2877429827997835,8.512487854191372,8.512487854191372,10.513689860890526,10.254870815788003,9.996051770685483,10.703158551872031,11.6690843781611,11.6690843781611,10.513689860890526,10.254870815788003,9.996051770685483,10.96197759697455,11.92790342326362,11.6690843781611,9.21959463537792,10.703158551872031,10.444339506769508,10.185520461666988,9.47841368048044,9.737232725582963,9.21959463537792,10.444339506769508,10.185520461666988,8.9607755902754,8.9607755902754,8.70195654517288,9.926701416564468,9.667882371461948,11.410265333058577,11.151446287956057,12.376191159347645,12.117372114245125,11.410265333058577,11.151446287956057,12.376191159347645,12.117372114245125,10.892627242853537,11.858553069142605,11.599734024040085,10.892627242853537,11.858553069142605,10.633808197751017,11.599734024040085,9.47841368048044,9.737232725582963,9.21959463537792,10.444339506769508,10.185520461666988,8.9607755902754,8.70195654517288,9.926701416564468,9.667882371461948,9.926701416564468,9.667882371461948,11.410265333058577,10.892627242853537,10.633808197751017,11.92790342326362,11.6690843781611,12.635010204450168,11.410265333058577,12.376191159347645,10.892627242853537,10.633808197751017,11.858553069142605,11.599734024040085,8.70195654517288,9.409063326359428,8.44313750007036,8.184318454967837,9.150244281256905,8.44313750007036,7.7360307188838116,7.477211673781292,8.184318454967837,9.409063326359428,9.150244281256905,7.925499409865317,8.891425236154385,7.925499409865317,8.891425236154385,8.44313750007036,7.477211673781292,10.374989152648498,10.116170107545974,11.340914978937565,11.082095933835042,10.823276888732522,7.149042274557754,7.149042274557754,6.890223229455234,5.9242974031661655,6.890223229455234,5.9242974031661655,10.374989152648498,10.116170107545974,11.340914978937565,11.082095933835042,11.082095933835042,10.823276888732522,10.564457843630002,10.823276888732522,10.564457843630002,17.483221707277046,17.224402662174526,17.483221707277046,17.224402662174526,12.565659850329153,13.53158567661822,12.824478895431673,12.565659850329153,13.53158567661822,12.306840805226633,12.04802176012411,13.272766631515701,13.013947586413178,12.306840805226633,12.04802176012411,13.272766631515701,13.013947586413178,12.755128541310658,12.496309496208138,12.755128541310658,12.496309496208138,13.462235322497207,12.04802176012411,11.78920271502159]
        self.zobs = [7.0,7.0,8.0,8.0,6.0,6.0,7.0,7.0,8.0,8.0,11.0,12.0,12.0,11.0,12.0,12.0,12.0,13.0,13.0,13.0,13.0,12.0,12.0,12.0,12.0,13.0,13.0,13.0,13.0,12.0,12.0,13.0,13.0,6.0,6.0,7.0,8.0,8.0,8.0,6.0,6.0,7.0,7.0,7.0,7.0,8.0,8.0,8.0,8.0,8.0,8.0,7.0,8.0,8.0,9.0,9.0,9.0,9.0,10.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,11.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,12.0,12.0,11.0,12.0,12.0,10.0,11.0,12.0,12.0,12.0,11.0,11.0,12.0,12.0,12.0,11.0,11.0,12.0,12.0,9.0,9.0,9.0,9.0,9.0,10.0,10.0,9.0,9.0,9.0,9.0,10.0,10.0,10.0,10.0,9.0,10.0,11.0,11.0,12.0,12.0,12.0,11.0,11.0,11.0,12.0,9.0,9.0,9.0,9.0,9.0,10.0,10.0,10.0,10.0,9.0,9.0,9.0,10.0,10.0,10.0,10.0,11.0,11.0,11.0,11.0,11.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,13.0,14.0,14.0,13.0,14.0,14.0,14.0,14.0,15.0,15.0,15.0,15.0,15.0,15.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,15.0,15.0,11.0,11.0,12.0,12.0,11.0,13.0,14.0,14.0,14.0,15.0,15.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,14.0,14.0,14.0,15.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,15.0,14.0,14.0,15.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,15.0,15.0,16.0,16.0,14.0,14.0,15.0,15.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,14.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,14.0,14.0,14.0,14.0,14.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,15.0,14.0,14.0,16.0,15.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,14.0,14.0,16.0,15.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,14.0,14.0,14.0,14.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,15.0,15.0,14.0,14.0,14.0,15.0,16.0,16.0,15.0,15.0,16.0,16.0,16.0,13.0,13.0,14.0,13.0,11.0,11.0,12.0,12.0,12.0,11.0,11.0,11.0,12.0,12.0,15.0,15.0,16.0,16.0,15.0,14.0,14.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,16.0,15.0,16.0,15.0,15.0,16.0,16.0,16.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,12.0,13.0,13.0,13.0,13.0,14.0,13.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,14.0,15.0,15.0,16.0,16.0,15.0,13.0,13.0,13.0,14.0,14.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,13.0,15.0,15.0,15.0,14.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,16.0,15.0,15.0,15.0,16.0,16.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,14.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,13.0,13.0,15.0,15.0,15.0,15.0,16.0,16.0,16.0,15.0,15.0,15.0,15.0,16.0,12.0,12.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,13.0,14.0,14.0,14.0,14.0,13.0,13.0,13.0,13.0,14.0,14.0,13.0,14.0,14.0,14.0,15.0,15.0,15.0,15.0,15.0,16.0,15.0,15.0,16.0,16.0,14.0,14.0,14.0,14.0,14.0,14.0,13.0,13.0,14.0,14.0,14.0,14.0,13.0,13.0,14.0,14.0,14.0,14.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,15.0,16.0,16.0,15.0,15.0,15.0,15.0,15.0,15.0,13.0,13.0,14.0,14.0,14.0,15.0,15.0,16.0,16.0,16.0,16.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,15.0,16.0,16.0,16.0,8.0,8.0,10.0,10.0,10.0,11.0,12.0,11.0,11.0,12.0,12.0,16.0,16.0,13.0,13.0,9.0,10.0,9.0,9.0,10.0,10.0,10.0,10.0,9.0,11.0,12.0,12.0,11.0,12.0,10.0,10.0,10.0,10.0,10.0,9.0,9.0,10.0,10.0,9.0,9.0,10.0,10.0,11.0,11.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,11.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,12.0,12.0,11.0,11.0,11.0,11.0,12.0,12.0,12.0,12.0,12.0,11.0,12.0,12.0,12.0,12.0,14.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,14.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,15.0,15.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,13.0,13.0,13.0,13.0,14.0,16.0,16.0,13.0,13.0,13.0,13.0,13.0,14.0,14.0,14.0,14.0,14.0,14.0,13.0,13.0,13.0,14.0,14.0,13.0,13.0,13.0,13.0,14.0,15.0,15.0,15.0,15.0,15.0,16.0,15.0,15.0,15.0,16.0,16.0,15.0,15.0,16.0,15.0,15.0,16.0,16.0,15.0,15.0,16.0,16.0,9.0,10.0,10.0,11.0,11.0,11.0,11.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,16.0,17.0,17.0,18.0,18.0,21.0,21.0,21.0,21.0,22.0,22.0,22.0,22.0,21.0,21.0,21.0,21.0,22.0,22.0,22.0,21.0,22.0,22.0,21.0,21.0,21.0,21.0,22.0,22.0,22.0,22.0,23.0,23.0,23.0,23.0,23.0,23.0,23.0,23.0,23.0,23.0,23.0,21.0,21.0,22.0,22.0,17.0,18.0,18.0,19.0,20.0,19.0,19.0,20.0,20.0,20.0,20.0,20.0,20.0,19.0,20.0,20.0,19.0,20.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,17.0,18.0,18.0,18.0,17.0,17.0,17.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,19.0,19.0,20.0,20.0,19.0,19.0,19.0,18.0,19.0,19.0,20.0,20.0,20.0,20.0,19.0,19.0,20.0,22.0,21.0,22.0,21.0,22.0,23.0,23.0,21.0,21.0,21.0,21.0,21.0,22.0,22.0,22.0,22.0,23.0,24.0,23.0,23.0,23.0,23.0,23.0,24.0,21.0,21.0,21.0,21.0,21.0,22.0,21.0,22.0,22.0,22.0,22.0,22.0,23.0,23.0,23.0,24.0,24.0,24.0,22.0,22.0,21.0,22.0,22.0,21.0,22.0,22.0,22.0,22.0,22.0,23.0,23.0,23.0,23.0,24.0,23.0,23.0,23.0,23.0,23.0,24.0,24.0,24.0,23.0,23.0,23.0,24.0,23.0,24.0,22.0,22.0,22.0,23.0,23.0,23.0,23.0,23.0,24.0,24.0,17.0,18.0,18.0,18.0,18.0,18.0,17.0,18.0,18.0,18.0,18.0,18.0,19.0,19.0,19.0,19.0,20.0,19.0,19.0,20.0,20.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,19.0,20.0,20.0,24.0,22.0,21.0,21.0,21.0,21.0,23.0,24.0,23.0,22.0,22.0,22.0,22.0,23.0,23.0,23.0,23.0,23.0,24.0,24.0,24.0,24.0,24.0,24.0,23.0,24.0,24.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,25.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,17.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,17.0,17.0,17.0,18.0,17.0,17.0,17.0,17.0,17.0,18.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,17.0,17.0,18.0,18.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,20.0,17.0,18.0,17.0,17.0,17.0,18.0,18.0,17.0,18.0,18.0,17.0,17.0,18.0,18.0,20.0,20.0,20.0,19.0,20.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,18.0,18.0,19.0,18.0,18.0,18.0,18.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,20.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,18.0,19.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,19.0,19.0,20.0,20.0,20.0,20.0,20.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,17.0,17.0,19.0,20.0,19.0,19.0,19.0,20.0,20.0,20.0,17.0,17.0,17.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,19.0,19.0,19.0,17.0,17.0,17.0,17.0,17.0,19.0,19.0,20.0,20.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,20.0,19.0,19.0,20.0,20.0,19.0,19.0,20.0,20.0,17.0,18.0,17.0,18.0,18.0,17.0,17.0,17.0,18.0,18.0,18.0,17.0,17.0,18.0,19.0,19.0,20.0,20.0,20.0,20.0,19.0,19.0,19.0,20.0,20.0,20.0,19.0,19.0,20.0,20.0,20.0,20.0,19.0,20.0,20.0,20.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,18.0,17.0,18.0,18.0,18.0,18.0,18.0,19.0,19.0,19.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,19.0,18.0,18.0,18.0,18.0,17.0,18.0,19.0,19.0,19.0,19.0,20.0,20.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,19.0,20.0,20.0,20.0,20.0,20.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,21.0,17.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,19.0,19.0,20.0,20.0,20.0,20.0,20.0,17.0,18.0,17.0,17.0,18.0,18.0,21.0,21.0,21.0,21.0,22.0,21.0,21.0,22.0,22.0,20.0,20.0,21.0,21.0,17.0,17.0,18.0,18.0,18.0,17.0,17.0,17.0,17.0,18.0,18.0,18.0,18.0,17.0,17.0,18.0,18.0,17.0,21.0,21.0]


        # self.xobs = [0, 21, 22, 21, 22, 21, 8, 7, 9, 8, 9, 7, 8, 11, 11, 10, 9, 9, 8, 3, 2, 16, 21, 21, 15, 16, 16, 15, 16, 15, 16, 15, 16, 12, 11, 11, 10, 21, 21, 15, 16, 14, 14, 13, 9, 9, 8, 16, 15, 16, 16, 15, 16, 15, 16, 15, 16, 15, 16, 14, 14, 13, 21, 21, 12, 11, 11, 10, 21, 21, 16, 16, 15, 16, 15, 16, 15, 16, 14, 9, 9, 8, 16, 15, 16, 15, 14, 13, 12, 12, 16, 16, 16, 15, 16, 15, 14, 11, 11, 10, 9]
        # self.yobs = [0, 3, 4, 4, 5, 6, 4, 4, 4, 5, 6, 6, 7, 10, 9, 10, 9, 10, 9, 4, 4, 3, 3, 4, 4, 4, 5, 5, 6, 7, 7, 9, 10, 9, 10, 9, 10, 3, 4, 8, 9, 10, 9, 10, 9, 10, 9, 3, 4, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 10, 9, 10, 3, 4, 9, 10, 9, 10, 3, 4, 5, 6, 7, 7, 8, 9, 9, 10, 10, 9, 10, 9, 3, 4, 4, 5, 9, 10, 9, 11, 5, 8, 7, 8, 9, 9, 10, 10, 9, 10, 9]
        # self.zobs = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 3, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4]

        # self.xobs = [0, 2, 3, 2, 4, 4, 5, 6, 7, 7, 8, 9, 7, 9, 11, 8, 22, 21, 22, 21, 22, 21, 22, 8, 7, 9, 8, 7, 8, 12, 11, 11, 10, 9, 9, 8, 7, 7, 6, 5, 4, 4, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 9, 10, 11, 22, 16, 15, 16, 22, 22, 15, 16, 15, 16, 16, 16, 15, 14, 14, 13, 12, 11, 11, 10, 8, 9, 9, 10, 11, 11, 12, 13, 14, 14, 15, 16, 16, 22, 22, 22, 15, 16, 9, 9, 8, 7, 7, 6, 5, 4, 4, 3, 2, 3, 7, 7, 15, 16, 16, 16, 15, 16, 15, 16, 15, 16, 16, 15, 16, 15, 16, 14, 14, 2, 3, 4, 5, 6, 12, 13, 14, 14, 22, 22, 22, 13, 12, 11, 11, 10, 9, 2, 4, 10, 11, 11, 16, 16, 16, 22, 22, 22, 16, 15, 16, 15, 16, 15, 16, 14, 9, 8, 7, 7, 3, 2, 2, 9, 9, 14, 15, 15, 16, 15, 16, 15, 16, 14, 13, 12, 12, 6, 5, 4, 4, 3, 2, 8, 12, 13, 14, 16, 16, 16, 15, 16, 15, 14, 11, 11, 10, 9, 3]
        # self.yobs = [0, 2, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0, 2, 2, 0, 2, 1, 2, 2, 3, 4, 4, 5, 4, 4, 4, 5, 6, 7, 9, 10, 9, 10, 9, 10, 9, 10, 9, 10, 9, 10, 9, 10, 9, 9, 8, 7, 7, 6, 5, 4, 4, 1, 0, 1, 1, 2, 2, 3, 2, 4, 4, 4, 5, 6, 7, 10, 9, 10, 9, 10, 9, 10, 9, 10, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 2, 4, 8, 9, 9, 10, 9, 10, 9, 10, 9, 10, 9, 10, 9, 9, 1, 0, 1, 0, 1, 2, 2, 3, 4, 4, 5, 6, 7, 8, 9, 9, 10, 10, 9, 8, 7, 0, 1, 0, 1, 0, 1, 0, 1, 2, 4, 10, 9, 10, 9, 10, 9, 7, 1, 0, 1, 0, 0, 1, 2, 1, 2, 4, 6, 7, 7, 8, 9, 9, 10, 10, 10, 9, 10, 9, 6, 5, 1, 0, 1, 0, 1, 2, 3, 4, 4, 5, 8, 9, 10, 9, 11, 10, 9, 10, 9, 10, 9, 1, 1, 0, 1, 1, 8, 7, 8, 9, 9, 10, 10, 9, 10, 9, 9]
        # self.zobs = [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 3]

        # self.xobs = [0, 20, 5, 6, 7, 7, 7, 7, 8, 21, 7, 7, 21, 7, 7, 7, 7, 7, 6, 5, 21, 21, 16, 14, 7, 7, 6, 5, 5, 6, 7, 7, 7, 7, 7, 8, 14, 7, 7, 7, 7, 14, 14, 15, 11, 10, 9, 9, 8, 8, 9, 8, 9, 10, 11, 12, 14, 14, 15, 15, 14, 15, 13, 12, 8, 7, 7, 6, 12, 14, 15, 14, 15, 16, 15, 14, 15, 16, 14, 15, 14, 15, 14, 12, 11, 10, 5]
        # self.yobs = [0, 10, -1, -1, -1, 0, 1, 2, 2, 1, 3, 4, 6, 5, 6, 7, 8, 9, 9, 9, 1, 6, 2, 4, 8, 9, 9, 9, -1, -1, -1, 0, 1, 2, 3, 2, 2, 4, 5, 6, 7, 2, 4, 8, 9, 9, 9, 9, 8, -1, -1, -1, 0, 0, -1, -1, 2, 4, 5, 8, 9, 9, 9, 9, 8, 9, 8, 9, -1, -1, -1, 0, 1, 2, 2, 3, 4, 6, 6, 7, 7, 9, 9, 9, 9, 9, 9]
        # self.zobs = [0, 20, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 3]

        self.capaX = self.xobs
        self.capaY = self.yobs
        self.capaZ = self.zobs

        self.visX = self.xobs
        self.visY = self.yobs
        self.visZ = self.zobs
        
        self.raio = 0.8
        self.robs = [self.raio] * len(self.xobs)
        
        # zobs1 = [altZ+1] * len(self.xobs)
        # zobs2 = [altZ+2] * len(self.xobs)
        # # zobs3 = [altZ+3] * len(self.xobs)
        # self.xobs = np.concatenate((self.xobs,self.xobs,self.xobs), axis=0)
        # self.yobs = np.concatenate((self.yobs,self.yobs,self.yobs), axis=0)
        # self.zobs = np.concatenate((self.zobs,zobs1,zobs2), axis=0)

        # limite que pode andar no x
        self.xmin = min(np.concatenate(([self.xs], self.xobs, [self.xt]), axis=0)) - 1
        self.xmax = max(np.concatenate(([self.xs], self.xobs, [self.xt]), axis=0)) + 1

        # limite que pode andar no y
        self.ymin = min(np.concatenate(([self.ys], self.yobs, [self.yt]), axis=0)) - 1
        self.ymax = max(np.concatenate(([self.ys], self.yobs, [self.yt]), axis=0)) + 1

        # limite que pode andar no z
        self.zmin = 1
        self.zmax = 5

        self.xs += 0.1
        self.ys += 0.1
        self.xt += 0.1
        self.yt += 0.1
