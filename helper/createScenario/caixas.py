import random
import numpy as np
import matplotlib.pyplot as plt

# random.seed(42) # so usar essa linha em testes

def createBox(i, x, y):
    alt1 = random.uniform(1.7,2.5)
    alt2 = random.uniform(1.7,2.5)
    alt3 = random.uniform(1,6)

    if alt3 >= 3.5:
        ola = "<model name='Cardboard_box_" + str(i) + "'>\n\
            <link name='link_0'>\n\
              <pose frame=''>" + str(x) + " " + str(y) + " 0 0 0 0</pose>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
              <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
        <visual name='visual'>\n\
          <pose frame=''>0 0 0 0 0 0</pose>\n\
        <geometry>\n\
            <mesh>\n\
            <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
            <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
        </geometry>\n\
        <transparency>0</transparency>\n\
        <cast_shadows>1</cast_shadows>\n\
        </visual>\n\
        <self_collide>0</self_collide>\n\
        <enable_wind>0</enable_wind>\n\
        <kinematic>0</kinematic>\n\
    </link>\n\
    <static>1</static>\n\
    <allow_auto_disable>1</allow_auto_disable>\n\
    </model>\n"
    else:
        ola = "<model name='Cardboard_box_" + str(i) + "'>\n\
            <link name='link_0'>\n\
              <pose frame=''>" + str(x) + " " + str(y) + " 0 0 0 0</pose>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
          <visual name='visual'>\n\
          <pose frame=''>0 0 0 0 0 0</pose>\n\
          <geometry>\n\
              <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
              <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
              </mesh>\n\
          </geometry>\n\
          <transparency>0</transparency>\n\
          <cast_shadows>1</cast_shadows>\n\
          </visual>\n\
          <self_collide>0</self_collide>\n\
          <enable_wind>0</enable_wind>\n\
          <kinematic>0</kinematic>\n\
      </link>\n\
      <static>1</static>\n\
      <allow_auto_disable>1</allow_auto_disable>\n\
      </model>\n\
          <model name='Cardboard_box_top_" + str(i) + "'>\n\
            <link name='link_0'>\n\
              <pose frame=''>" + str(x) + " " + str(y) + " " + str(alt3/2.5) +" 0 0 0</pose>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
                <visual name='visual'>\n\
                <pose frame=''>0 0 0 0 0 0</pose>\n\
                <geometry>\n\
                    <mesh>\n\
                    <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                    <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
                    </mesh>\n\
                </geometry>\n\
                <transparency>0</transparency>\n\
                <cast_shadows>1</cast_shadows>\n\
                </visual>\n\
                <self_collide>0</self_collide>\n\
                <enable_wind>0</enable_wind>\n\
                <kinematic>0</kinematic>\n\
            </link>\n\
            <static>1</static>\n\
            <allow_auto_disable>1</allow_auto_disable>\n\
            </model>\n"

    return ola

def red(i, x, y):
  tot = 14
  alt1 = random.uniform(1.7,2.5)
  alt2 = random.uniform(1.7,2.5)
  alt3 = random.uniform(1,tot)
  ola = "<model name='red_" + str(i) + "'>\n\
            <link name='link_0'>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <visual name='visual'>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <geometry>\n\
                    <mesh>\n\
                    <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                    <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
                    </mesh>\n\
                </geometry>\n\
                <transparency>0</transparency>\n\
                <cast_shadows>1</cast_shadows>\n\
                </visual>\n\
                <self_collide>0</self_collide>\n\
                <enable_wind>0</enable_wind>\n\
                <kinematic>0</kinematic>\n\
            </link>\n\
            <static>1</static>\n\
            <allow_auto_disable>1</allow_auto_disable>\n\
            <pose frame=''>" + str(x) + " " + str(y) + " 0 0 0 0</pose>\n\
            </model>\n"
  if alt3 < 10:
    ola = ola + "<model name='red_top_" + str(i) + "'>\n\
            <link name='link_0'>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
              <scale>" + str(alt1) + " " + str(alt2) + " " + str(tot-alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <visual name='visual'>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <geometry>\n\
                    <mesh>\n\
                    <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                    <scale>" + str(alt1) + " " + str(alt2) + " " + str(tot-alt3) +"</scale>\n\
                    </mesh>\n\
                </geometry>\n\
                <transparency>0</transparency>\n\
                <cast_shadows>1</cast_shadows>\n\
                </visual>\n\
                <self_collide>0</self_collide>\n\
                <enable_wind>0</enable_wind>\n\
                <kinematic>0</kinematic>\n\
            </link>\n\
            <static>1</static>\n\
            <allow_auto_disable>1</allow_auto_disable>\n\
            <pose frame=''>" + str(x) + " " + str(y) + " " + str(alt3/2.5) +"0 0 0</pose>\n\
            </model>\n"
      
  return ola

def yellow(i, x, y):
  alt1 = random.uniform(1.7,2.5)
  alt2 = random.uniform(1.7,2.5)
  alt3 = random.uniform(6,10)
  posZ = random.uniform(2.5,3)
  ola = "<model name='yellow_" + str(i) + "'>\n\
            <link name='link_0'>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <visual name='visual'>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <geometry>\n\
                    <mesh>\n\
                    <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                    <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
                    </mesh>\n\
                </geometry>\n\
                <transparency>0</transparency>\n\
                <cast_shadows>1</cast_shadows>\n\
                </visual>\n\
                <self_collide>0</self_collide>\n\
                <enable_wind>0</enable_wind>\n\
                <kinematic>0</kinematic>\n\
            </link>\n\
            <static>1</static>\n\
            <allow_auto_disable>1</allow_auto_disable>\n\
            <pose frame=''>" + str(x) + " " + str(y) + " " + str(posZ) + " 0 0 0</pose>\n\
            </model>\n"
  return ola

def pink(i, x, y):
  alt1 = random.uniform(1.7,2.5)
  alt2 = random.uniform(1.7,2.5)
  alt3 = random.uniform(6.5,7)
  ola = "<model name='pink_" + str(i) + "'>\n\
            <link name='link_0'>\n\
                <collision name='collision'>\n\
          <geometry>\n\
            <mesh>\n\
              <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
            </mesh>\n\
          </geometry>\n\
          <max_contacts>10</max_contacts>\n\
          <surface>\n\
            <contact>\n\
              <ode/>\n\
            </contact>\n\
            <bounce/>\n\
            <friction>\n\
              <torsional>\n\
                <ode/>\n\
              </torsional>\n\
              <ode/>\n\
            </friction>\n\
          </surface>\n\
        </collision>\n\
                <inertial>\n\
                <mass>1</mass>\n\
                <inertia>\n\
                    <ixx>0.166667</ixx>\n\
                    <ixy>0</ixy>\n\
                    <ixz>0</ixz>\n\
                    <iyy>0.166667</iyy>\n\
                    <iyz>0</iyz>\n\
                    <izz>0.166667</izz>\n\
                </inertia>\n\
                </inertial>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <visual name='visual'>\n\
                <pose frame=''>0 0 0 0 -0 0</pose>\n\
                <geometry>\n\
                    <mesh>\n\
                    <uri>model://Cardboard_box/meshes/cardboard_box.dae</uri>\n\
                    <scale>" + str(alt1) + " " + str(alt2) + " " + str(alt3) +"</scale>\n\
                    </mesh>\n\
                </geometry>\n\
                <transparency>0</transparency>\n\
                <cast_shadows>1</cast_shadows>\n\
                </visual>\n\
                <self_collide>0</self_collide>\n\
                <enable_wind>0</enable_wind>\n\
                <kinematic>0</kinematic>\n\
            </link>\n\
            <static>1</static>\n\
            <allow_auto_disable>1</allow_auto_disable>\n\
            <pose frame=''>" + str(x) + " " + str(y) + " 0 0 0 0</pose>\n\
            </model>\n"
  return ola

# icaps
# para altura fixa
# xx = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 11.0, 11.0, 11.0, 11.0, 16.0, 16.0, 16.0, 16.0, 3.0, 3.0, 3.0, 3.0, 3.0, 7.0, 7.0, 7.0, 7.0, 7.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 12.0, 13.0, 14.0, 15.0, 12.0, 13.0, 14.0, 15.0, 4.0, 5.0, 6.0, 2.0, 3.0, 4.0, 5.0, 6.0, 2.0, 3.0, 4.0, 5.0, 6.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 16.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0, 12.0, 12.0, 13.0, 13.0, 14.0, 14.0, 15.0, 15.0, 12.0, 12.0, 13.0, 13.0, 14.0, 14.0, 15.0, 15.0, 4.0, 4.0, 5.0, 5.0, 6.0, 6.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 6.0, 6.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 6.0, 6.0]
# yy = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 24.0, 25.0, 22.0, 23.0, 24.0, 25.0, 22.0, 23.0, 23.0, 24.0, 25.0, 26.0, 27.0, 23.0, 24.0, 25.0, 26.0, 27.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 22.0, 22.0, 22.0, 22.0, 25.0, 25.0, 25.0, 25.0, 23.0, 23.0, 23.0, 10.0, 10.0, 10.0, 10.0, 10.0, 18.0, 18.0, 18.0, 18.0, 18.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 6.0, 6.0, 7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 16.0, 16.0, 17.0, 17.0, 18.0, 18.0, 19.0, 19.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 14.0, 14.0, 15.0, 15.0, 16.0, 16.0, 17.0, 17.0, 18.0, 18.0, 24.0, 24.0, 25.0, 25.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 22.0, 22.0, 23.0, 23.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 26.0, 22.0, 22.0, 22.0, 22.0, 22.0, 22.0, 22.0, 22.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 23.0, 23.0, 23.0, 23.0, 23.0, 23.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0]

# xx = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 14.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0]
# yy = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 1.0, 1.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 6.0, 6.0, 7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 12.0, 12.0, 13.0, 13.0, 14.0, 14.0, 15.0, 15.0, 16.0, 16.0, 17.0, 17.0, 18.0, 18.0, 17.0, 17.0, 18.0, 18.0, 19.0, 19.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0, 11.0]

# LARS 100
xx = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 25.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 35.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 55.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 65.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 70.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 80.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 33.0, 33.0, 34.0, 34.0, 35.0, 35.0, 25.0, 25.0, 26.0, 26.0, 27.0, 27.0, 28.0, 28.0, 29.0, 29.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 33.0, 33.0, 34.0, 34.0, 35.0, 35.0, 55.0, 55.0, 56.0, 56.0, 57.0, 57.0, 58.0, 58.0, 59.0, 59.0, 60.0, 60.0, 61.0, 61.0, 62.0, 62.0, 63.0, 63.0, 64.0, 64.0, 65.0, 65.0, 55.0, 55.0, 56.0, 56.0, 57.0, 57.0, 58.0, 58.0, 59.0, 59.0, 60.0, 60.0, 61.0, 61.0, 62.0, 62.0, 63.0, 63.0, 64.0, 64.0, 65.0, 65.0, 50.0, 50.0, 51.0, 51.0, 52.0, 52.0, 53.0, 53.0, 54.0, 54.0, 55.0, 55.0, 56.0, 56.0, 57.0, 57.0, 58.0, 58.0, 59.0, 59.0, 60.0, 60.0, 61.0, 61.0, 62.0, 62.0, 80.0, 80.0, 81.0, 81.0, 82.0, 82.0, 83.0, 83.0, 84.0, 84.0, 85.0, 85.0, 86.0, 86.0, 87.0, 87.0, 88.0, 88.0, 89.0, 89.0, 35.0, 35.0, 36.0, 36.0, 37.0, 37.0, 38.0, 38.0, 39.0, 39.0, 40.0, 40.0, 41.0, 41.0, 42.0, 42.0, 43.0, 43.0, 44.0, 44.0, 45.0, 45.0, 46.0, 46.0, 47.0, 47.0]
yy = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 33.0, 33.0, 34.0, 34.0, 35.0, 35.0, 36.0, 36.0, 37.0, 37.0, 38.0, 38.0, 39.0, 39.0, 40.0, 40.0, 41.0, 41.0, 42.0, 42.0, 43.0, 43.0, 44.0, 44.0, 45.0, 45.0, 46.0, 46.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 33.0, 33.0, 34.0, 34.0, 35.0, 35.0, 36.0, 36.0, 37.0, 37.0, 38.0, 38.0, 39.0, 39.0, 40.0, 40.0, 41.0, 41.0, 42.0, 42.0, 43.0, 43.0, 44.0, 44.0, 45.0, 45.0, 46.0, 46.0, 18.0, 18.0, 19.0, 19.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 18.0, 18.0, 19.0, 19.0, 20.0, 20.0, 21.0, 21.0, 22.0, 22.0, 23.0, 23.0, 24.0, 24.0, 25.0, 25.0, 26.0, 26.0, 7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0, 13.0, 14.0, 14.0, 15.0, 15.0, 60.0, 60.0, 61.0, 61.0, 62.0, 62.0, 63.0, 63.0, 64.0, 64.0, 65.0, 65.0, 66.0, 66.0, 67.0, 67.0, 68.0, 68.0, 69.0, 69.0, 70.0, 70.0, 71.0, 71.0, 72.0, 72.0, 73.0, 73.0, 74.0, 74.0, 75.0, 75.0, 76.0, 76.0, 77.0, 77.0, 78.0, 78.0, 79.0, 79.0, 65.0, 65.0, 66.0, 66.0, 67.0, 67.0, 68.0, 68.0, 69.0, 69.0, 70.0, 70.0, 71.0, 71.0, 72.0, 72.0, 73.0, 73.0, 74.0, 74.0, 75.0, 75.0, 76.0, 76.0, 77.0, 77.0, 78.0, 78.0, 79.0, 79.0, 80.0, 80.0, 81.0, 81.0, 82.0, 82.0, 83.0, 83.0, 84.0, 84.0, 85.0, 85.0, 30.0, 30.0, 31.0, 31.0, 32.0, 32.0, 33.0, 33.0, 34.0, 34.0, 35.0, 35.0, 36.0, 36.0, 37.0, 37.0, 38.0, 38.0, 39.0, 39.0, 70.0, 70.0, 71.0, 71.0, 72.0, 72.0, 73.0, 73.0, 74.0, 74.0, 75.0, 75.0, 76.0, 76.0, 77.0, 77.0, 78.0, 78.0, 79.0, 79.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 47.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 27.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 18.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 50.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 75.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0, 15.0]

# safety lab 1
xx = [5,5,5,5,5,5,5,5,5,5, 10,10,10,10,10,10,10,10,10,10]
yy = [4,5,6,7,8,13,14,15,16,17, 4,5,6,7,8,13,14,15,16,17]

#Classic 1 | red - nao pode passar | amarelo - so por baixo | rosa - so por cima
# para altura dinamica

# Mestrado
# redorX1 = [0]*11
# redorX2 = [21]*11
# redorX3 = np.arange(21)
# redorX4 = np.arange(21)
# redorY1 = np.arange(11)
# redorY2 = np.arange(11)
# redorY3 = [0]*21
# redorY4 = [11]*21
# redX = [2,2,2,3,4,4,4,3,7,7,7,7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18,13,13,13,13,13,17,18,19,20]
# redY = [2,3,4,4,4,5,6,6,1,2,3,4,5,6,7,8,8,8,8,4,4,4,4,4,4,4,4,5,6,7,8,9,8,8,8,8]
# pinkX = [4,4,4,16,16,15]
# pinkY = [10,9,8,2,3,10]
# yellowX = [1,2,12,12,13,17]
# yellowY = [6,6,1,2,10,10]

# # Mestrado V2
# redorX1 = [0]*10
# redorX2 = [20]*10
# redorX3 = np.arange(20)
# redorX4 = np.arange(20)
# redorY1 = np.arange(10)
# redorY2 = np.arange(10)
# redorY3 = [0]*20
# redorY4 = [10]*20
# redX = [5,5,5,5,5,5, 16,16,16,16,16]
# redY = [1,2,3,4,5,6, 9,8,7,6,5]
# pinkX = [11,12,13,14,15,16,16,16,16]
# pinkY = [5,5,5,5,5,4,3,2,1]
# yellowX = [10,10,10,10,10,10,10,10,10]
# yellowY = [1,2,3,4,5,6,7,8,9]

# # # BRACIS
# redorX1 = [0]*20
# redorX2 = [20]*20
# redorX3 = np.arange(20)
# redorX4 = np.arange(20)
# redorY1 = np.arange(20)
# redorY2 = np.arange(20)
# redorY3 = [0]*20
# redorY4 = [20]*20
# redX = [5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15]
# redY = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5]
# # so por cima
# pinkX = [6,7,8,9,10,11,12,13,14,6,7,8,9,10,11,12,13,14]
# pinkY = [15,15,15,15,15,15,15,15,15,5,5,5,5,5,5,5,5,5]
# # so por baixo
# yellowX = [6,7,8,9,10,11,12,13,14]
# yellowY = [10,10,10,10,10,10,10,10,10]


# # ICRA
xMax, yMax = 22, 24
redorX1 = [0]*yMax
redorX2 = [xMax]*yMax
redorX3 = np.arange(xMax)
redorX4 = np.arange(xMax)
redorY1 = np.arange(yMax)
redorY2 = np.arange(yMax)
redorY3 = [0]*xMax
redorY4 = [yMax]*xMax
redX = [4,4,4,4,5,6,7,8,9,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,6,6,6,6,6,6,6,6,6,16,16,16,16,16,16,16,16,16,16] 
redY = [14,15,16,17,17,17,17,17,17,17,17,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,1,2,3,4,5,6,7,8,9,10,11,4,5,6,7,8,9,10,11,12,13] 
# so por cima
pinkX = [1,2,3,4,5,4,4,4,4,4,4,17,18,19,20,21,17,18,19,20,21] 
pinkY = [7,7,7,7,7,18,19,20,21,22,23,17,17,17,17,17,7,7,7,7,7] 
# so por baixo
yellowX = [16,16,16,12,13,14,15,16,17,18,19,20,21,16,16,16,16,16,16,16] 
yellowY = [1,2,3,13,13,13,13,13,13,13,13,13,13,17,18,19,20,21,22,23] 

# redX = np.concatenate((redX, redorX1, redorX2, redorX3, redorX4), axis=0)
# redY = np.concatenate((redY, redorY1, redorY2, redorY3, redorY4), axis=0)

# # base 3D
# redorX1 = [0]*10
# redorX2 = [20]*10
# redorX3 = np.arange(20)
# redorX4 = np.arange(20)
# redorY1 = np.arange(10)
# redorY2 = np.arange(10)
# redorY3 = [0]*20
# redorY4 = [10]*20
# redX = []
# redY = []
# pinkX = [6,6,6,6,6,6,6,6,6]
# pinkY = [1,2,3,4,5,6,7,8,9]
# yellowX = [14,14,14,14,14,14,14,14,14]
# yellowY = [1,2,3,4,5,6,7,8,9]

redX = np.concatenate((redX, redorX1, redorX2, redorX3, redorX4), axis=0)
redY = np.concatenate((redY, redorY1, redorY2, redorY3, redorY4), axis=0)

# # gera arquivo txt com os modelos para por no .world, considerando apenas uma altura
# f = open("icra12021.txt", "w")
# for i in range(len(xx)):
#     f.write(createBox(i, xx[i], yy[i]))
# f.close()

# gera arquivo txt com os modelos para por no .world, considerando diversas alturas
f = open("icra12021.txt", "w")
for i in range(len(redX)):
  f.write(red(i, redX[i], redY[i]))
for i in range(len(yellowX)):
  f.write(yellow(i, yellowX[i], yellowY[i]))
for i in range(len(pinkX)):
  f.write(pink(i, pinkX[i], pinkY[i]))
f.close()

# import matplotlib.pyplot as plt
# plt.plot(xx, yy, ".b")
# plt.show()

plt.plot(redX, redY, ".r")
plt.plot(yellowX, yellowY, ".y")
plt.plot(pinkX, pinkY, ".b")
# plt.xlim(-5,20)
# plt.ylim(-5,20)
plt.xlabel("x (m)")
plt.ylabel("y (m)")
plt.show()